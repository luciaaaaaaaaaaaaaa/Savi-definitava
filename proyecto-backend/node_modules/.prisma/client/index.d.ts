
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Usuario
 * 
 */
export type Usuario = $Result.DefaultSelection<Prisma.$UsuarioPayload>
/**
 * Model Empresa
 * 
 */
export type Empresa = $Result.DefaultSelection<Prisma.$EmpresaPayload>
/**
 * Model Accesibilidad
 * 
 */
export type Accesibilidad = $Result.DefaultSelection<Prisma.$AccesibilidadPayload>
/**
 * Model Contact
 * 
 */
export type Contact = $Result.DefaultSelection<Prisma.$ContactPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Usuarios
 * const usuarios = await prisma.usuario.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Usuarios
   * const usuarios = await prisma.usuario.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.usuario`: Exposes CRUD operations for the **Usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.UsuarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.empresa`: Exposes CRUD operations for the **Empresa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Empresas
    * const empresas = await prisma.empresa.findMany()
    * ```
    */
  get empresa(): Prisma.EmpresaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.accesibilidad`: Exposes CRUD operations for the **Accesibilidad** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Accesibilidads
    * const accesibilidads = await prisma.accesibilidad.findMany()
    * ```
    */
  get accesibilidad(): Prisma.AccesibilidadDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.contact`: Exposes CRUD operations for the **Contact** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Contacts
    * const contacts = await prisma.contact.findMany()
    * ```
    */
  get contact(): Prisma.ContactDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.16.0
   * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Usuario: 'Usuario',
    Empresa: 'Empresa',
    Accesibilidad: 'Accesibilidad',
    Contact: 'Contact'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "usuario" | "empresa" | "accesibilidad" | "contact"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Usuario: {
        payload: Prisma.$UsuarioPayload<ExtArgs>
        fields: Prisma.UsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findFirst: {
            args: Prisma.UsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findMany: {
            args: Prisma.UsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          create: {
            args: Prisma.UsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          createMany: {
            args: Prisma.UsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          update: {
            args: Prisma.UsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.UsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
      Empresa: {
        payload: Prisma.$EmpresaPayload<ExtArgs>
        fields: Prisma.EmpresaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EmpresaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpresaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EmpresaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpresaPayload>
          }
          findFirst: {
            args: Prisma.EmpresaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpresaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EmpresaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpresaPayload>
          }
          findMany: {
            args: Prisma.EmpresaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpresaPayload>[]
          }
          create: {
            args: Prisma.EmpresaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpresaPayload>
          }
          createMany: {
            args: Prisma.EmpresaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.EmpresaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpresaPayload>
          }
          update: {
            args: Prisma.EmpresaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpresaPayload>
          }
          deleteMany: {
            args: Prisma.EmpresaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EmpresaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EmpresaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpresaPayload>
          }
          aggregate: {
            args: Prisma.EmpresaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEmpresa>
          }
          groupBy: {
            args: Prisma.EmpresaGroupByArgs<ExtArgs>
            result: $Utils.Optional<EmpresaGroupByOutputType>[]
          }
          count: {
            args: Prisma.EmpresaCountArgs<ExtArgs>
            result: $Utils.Optional<EmpresaCountAggregateOutputType> | number
          }
        }
      }
      Accesibilidad: {
        payload: Prisma.$AccesibilidadPayload<ExtArgs>
        fields: Prisma.AccesibilidadFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AccesibilidadFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccesibilidadPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AccesibilidadFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccesibilidadPayload>
          }
          findFirst: {
            args: Prisma.AccesibilidadFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccesibilidadPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AccesibilidadFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccesibilidadPayload>
          }
          findMany: {
            args: Prisma.AccesibilidadFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccesibilidadPayload>[]
          }
          create: {
            args: Prisma.AccesibilidadCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccesibilidadPayload>
          }
          createMany: {
            args: Prisma.AccesibilidadCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.AccesibilidadDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccesibilidadPayload>
          }
          update: {
            args: Prisma.AccesibilidadUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccesibilidadPayload>
          }
          deleteMany: {
            args: Prisma.AccesibilidadDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AccesibilidadUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AccesibilidadUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccesibilidadPayload>
          }
          aggregate: {
            args: Prisma.AccesibilidadAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAccesibilidad>
          }
          groupBy: {
            args: Prisma.AccesibilidadGroupByArgs<ExtArgs>
            result: $Utils.Optional<AccesibilidadGroupByOutputType>[]
          }
          count: {
            args: Prisma.AccesibilidadCountArgs<ExtArgs>
            result: $Utils.Optional<AccesibilidadCountAggregateOutputType> | number
          }
        }
      }
      Contact: {
        payload: Prisma.$ContactPayload<ExtArgs>
        fields: Prisma.ContactFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ContactFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ContactFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          findFirst: {
            args: Prisma.ContactFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ContactFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          findMany: {
            args: Prisma.ContactFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>[]
          }
          create: {
            args: Prisma.ContactCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          createMany: {
            args: Prisma.ContactCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ContactDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          update: {
            args: Prisma.ContactUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          deleteMany: {
            args: Prisma.ContactDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ContactUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ContactUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          aggregate: {
            args: Prisma.ContactAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateContact>
          }
          groupBy: {
            args: Prisma.ContactGroupByArgs<ExtArgs>
            result: $Utils.Optional<ContactGroupByOutputType>[]
          }
          count: {
            args: Prisma.ContactCountArgs<ExtArgs>
            result: $Utils.Optional<ContactCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale`
     */
    adapter?: runtime.SqlDriverAdapterFactory | null
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    usuario?: UsuarioOmit
    empresa?: EmpresaOmit
    accesibilidad?: AccesibilidadOmit
    contact?: ContactOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type EmpresaCountOutputType
   */

  export type EmpresaCountOutputType = {
    detallesAccesibilidad: number
  }

  export type EmpresaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detallesAccesibilidad?: boolean | EmpresaCountOutputTypeCountDetallesAccesibilidadArgs
  }

  // Custom InputTypes
  /**
   * EmpresaCountOutputType without action
   */
  export type EmpresaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmpresaCountOutputType
     */
    select?: EmpresaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EmpresaCountOutputType without action
   */
  export type EmpresaCountOutputTypeCountDetallesAccesibilidadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccesibilidadWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioAvgAggregateOutputType = {
    usuario_id: number | null
  }

  export type UsuarioSumAggregateOutputType = {
    usuario_id: number | null
  }

  export type UsuarioMinAggregateOutputType = {
    usuario_id: number | null
    nombre: string | null
    email: string | null
    password: string | null
    publicado: boolean | null
  }

  export type UsuarioMaxAggregateOutputType = {
    usuario_id: number | null
    nombre: string | null
    email: string | null
    password: string | null
    publicado: boolean | null
  }

  export type UsuarioCountAggregateOutputType = {
    usuario_id: number
    nombre: number
    email: number
    password: number
    publicado: number
    _all: number
  }


  export type UsuarioAvgAggregateInputType = {
    usuario_id?: true
  }

  export type UsuarioSumAggregateInputType = {
    usuario_id?: true
  }

  export type UsuarioMinAggregateInputType = {
    usuario_id?: true
    nombre?: true
    email?: true
    password?: true
    publicado?: true
  }

  export type UsuarioMaxAggregateInputType = {
    usuario_id?: true
    nombre?: true
    email?: true
    password?: true
    publicado?: true
  }

  export type UsuarioCountAggregateInputType = {
    usuario_id?: true
    nombre?: true
    email?: true
    password?: true
    publicado?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuario to aggregate.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type UsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithAggregationInput | UsuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: UsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _avg?: UsuarioAvgAggregateInputType
    _sum?: UsuarioSumAggregateInputType
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    usuario_id: number
    nombre: string
    email: string
    password: string
    publicado: boolean
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends UsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    usuario_id?: boolean
    nombre?: boolean
    email?: boolean
    password?: boolean
    publicado?: boolean
  }, ExtArgs["result"]["usuario"]>



  export type UsuarioSelectScalar = {
    usuario_id?: boolean
    nombre?: boolean
    email?: boolean
    password?: boolean
    publicado?: boolean
  }

  export type UsuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"usuario_id" | "nombre" | "email" | "password" | "publicado", ExtArgs["result"]["usuario"]>

  export type $UsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuario"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      usuario_id: number
      nombre: string
      email: string
      password: string
      publicado: boolean
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type UsuarioGetPayload<S extends boolean | null | undefined | UsuarioDefaultArgs> = $Result.GetResult<Prisma.$UsuarioPayload, S>

  type UsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UsuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface UsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuario'], meta: { name: 'Usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {UsuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuarioFindUniqueArgs>(args: SelectSubset<T, UsuarioFindUniqueArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UsuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuarioFindFirstArgs>(args?: SelectSubset<T, UsuarioFindFirstArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `usuario_id`
     * const usuarioWithUsuario_idOnly = await prisma.usuario.findMany({ select: { usuario_id: true } })
     * 
     */
    findMany<T extends UsuarioFindManyArgs>(args?: SelectSubset<T, UsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Usuario.
     * @param {UsuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
     */
    create<T extends UsuarioCreateArgs>(args: SelectSubset<T, UsuarioCreateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Usuarios.
     * @param {UsuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuarioCreateManyArgs>(args?: SelectSubset<T, UsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Usuario.
     * @param {UsuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
     */
    delete<T extends UsuarioDeleteArgs>(args: SelectSubset<T, UsuarioDeleteArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Usuario.
     * @param {UsuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuarioUpdateArgs>(args: SelectSubset<T, UsuarioUpdateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Usuarios.
     * @param {UsuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuarioDeleteManyArgs>(args?: SelectSubset<T, UsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuarioUpdateManyArgs>(args: SelectSubset<T, UsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Usuario.
     * @param {UsuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
     */
    upsert<T extends UsuarioUpsertArgs>(args: SelectSubset<T, UsuarioUpsertArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends UsuarioCountArgs>(
      args?: Subset<T, UsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuario model
   */
  readonly fields: UsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Usuario model
   */
  interface UsuarioFieldRefs {
    readonly usuario_id: FieldRef<"Usuario", 'Int'>
    readonly nombre: FieldRef<"Usuario", 'String'>
    readonly email: FieldRef<"Usuario", 'String'>
    readonly password: FieldRef<"Usuario", 'String'>
    readonly publicado: FieldRef<"Usuario", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Usuario findUnique
   */
  export type UsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findUniqueOrThrow
   */
  export type UsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findFirst
   */
  export type UsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findFirstOrThrow
   */
  export type UsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findMany
   */
  export type UsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario create
   */
  export type UsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data needed to create a Usuario.
     */
    data: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
  }

  /**
   * Usuario createMany
   */
  export type UsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario update
   */
  export type UsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data needed to update a Usuario.
     */
    data: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
    /**
     * Choose, which Usuario to update.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario updateMany
   */
  export type UsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
  }

  /**
   * Usuario upsert
   */
  export type UsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The filter to search for the Usuario to update in case it exists.
     */
    where: UsuarioWhereUniqueInput
    /**
     * In case the Usuario found by the `where` argument doesn't exist, create a new Usuario with this data.
     */
    create: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
    /**
     * In case the Usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
  }

  /**
   * Usuario delete
   */
  export type UsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Filter which Usuario to delete.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario deleteMany
   */
  export type UsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to delete
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to delete.
     */
    limit?: number
  }

  /**
   * Usuario without action
   */
  export type UsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
  }


  /**
   * Model Empresa
   */

  export type AggregateEmpresa = {
    _count: EmpresaCountAggregateOutputType | null
    _avg: EmpresaAvgAggregateOutputType | null
    _sum: EmpresaSumAggregateOutputType | null
    _min: EmpresaMinAggregateOutputType | null
    _max: EmpresaMaxAggregateOutputType | null
  }

  export type EmpresaAvgAggregateOutputType = {
    empresa_id: number | null
  }

  export type EmpresaSumAggregateOutputType = {
    empresa_id: number | null
  }

  export type EmpresaMinAggregateOutputType = {
    empresa_id: number | null
    nombre: string | null
    email: string | null
    password: string | null
    publicado: boolean | null
    accesibilidad: string | null
  }

  export type EmpresaMaxAggregateOutputType = {
    empresa_id: number | null
    nombre: string | null
    email: string | null
    password: string | null
    publicado: boolean | null
    accesibilidad: string | null
  }

  export type EmpresaCountAggregateOutputType = {
    empresa_id: number
    nombre: number
    email: number
    password: number
    publicado: number
    accesibilidad: number
    _all: number
  }


  export type EmpresaAvgAggregateInputType = {
    empresa_id?: true
  }

  export type EmpresaSumAggregateInputType = {
    empresa_id?: true
  }

  export type EmpresaMinAggregateInputType = {
    empresa_id?: true
    nombre?: true
    email?: true
    password?: true
    publicado?: true
    accesibilidad?: true
  }

  export type EmpresaMaxAggregateInputType = {
    empresa_id?: true
    nombre?: true
    email?: true
    password?: true
    publicado?: true
    accesibilidad?: true
  }

  export type EmpresaCountAggregateInputType = {
    empresa_id?: true
    nombre?: true
    email?: true
    password?: true
    publicado?: true
    accesibilidad?: true
    _all?: true
  }

  export type EmpresaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Empresa to aggregate.
     */
    where?: EmpresaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Empresas to fetch.
     */
    orderBy?: EmpresaOrderByWithRelationInput | EmpresaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EmpresaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Empresas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Empresas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Empresas
    **/
    _count?: true | EmpresaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EmpresaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EmpresaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EmpresaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EmpresaMaxAggregateInputType
  }

  export type GetEmpresaAggregateType<T extends EmpresaAggregateArgs> = {
        [P in keyof T & keyof AggregateEmpresa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEmpresa[P]>
      : GetScalarType<T[P], AggregateEmpresa[P]>
  }




  export type EmpresaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EmpresaWhereInput
    orderBy?: EmpresaOrderByWithAggregationInput | EmpresaOrderByWithAggregationInput[]
    by: EmpresaScalarFieldEnum[] | EmpresaScalarFieldEnum
    having?: EmpresaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EmpresaCountAggregateInputType | true
    _avg?: EmpresaAvgAggregateInputType
    _sum?: EmpresaSumAggregateInputType
    _min?: EmpresaMinAggregateInputType
    _max?: EmpresaMaxAggregateInputType
  }

  export type EmpresaGroupByOutputType = {
    empresa_id: number
    nombre: string
    email: string
    password: string
    publicado: boolean
    accesibilidad: string | null
    _count: EmpresaCountAggregateOutputType | null
    _avg: EmpresaAvgAggregateOutputType | null
    _sum: EmpresaSumAggregateOutputType | null
    _min: EmpresaMinAggregateOutputType | null
    _max: EmpresaMaxAggregateOutputType | null
  }

  type GetEmpresaGroupByPayload<T extends EmpresaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EmpresaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EmpresaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EmpresaGroupByOutputType[P]>
            : GetScalarType<T[P], EmpresaGroupByOutputType[P]>
        }
      >
    >


  export type EmpresaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    empresa_id?: boolean
    nombre?: boolean
    email?: boolean
    password?: boolean
    publicado?: boolean
    accesibilidad?: boolean
    detallesAccesibilidad?: boolean | Empresa$detallesAccesibilidadArgs<ExtArgs>
    _count?: boolean | EmpresaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["empresa"]>



  export type EmpresaSelectScalar = {
    empresa_id?: boolean
    nombre?: boolean
    email?: boolean
    password?: boolean
    publicado?: boolean
    accesibilidad?: boolean
  }

  export type EmpresaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"empresa_id" | "nombre" | "email" | "password" | "publicado" | "accesibilidad", ExtArgs["result"]["empresa"]>
  export type EmpresaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detallesAccesibilidad?: boolean | Empresa$detallesAccesibilidadArgs<ExtArgs>
    _count?: boolean | EmpresaCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $EmpresaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Empresa"
    objects: {
      detallesAccesibilidad: Prisma.$AccesibilidadPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      empresa_id: number
      nombre: string
      email: string
      password: string
      publicado: boolean
      accesibilidad: string | null
    }, ExtArgs["result"]["empresa"]>
    composites: {}
  }

  type EmpresaGetPayload<S extends boolean | null | undefined | EmpresaDefaultArgs> = $Result.GetResult<Prisma.$EmpresaPayload, S>

  type EmpresaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EmpresaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EmpresaCountAggregateInputType | true
    }

  export interface EmpresaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Empresa'], meta: { name: 'Empresa' } }
    /**
     * Find zero or one Empresa that matches the filter.
     * @param {EmpresaFindUniqueArgs} args - Arguments to find a Empresa
     * @example
     * // Get one Empresa
     * const empresa = await prisma.empresa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EmpresaFindUniqueArgs>(args: SelectSubset<T, EmpresaFindUniqueArgs<ExtArgs>>): Prisma__EmpresaClient<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Empresa that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EmpresaFindUniqueOrThrowArgs} args - Arguments to find a Empresa
     * @example
     * // Get one Empresa
     * const empresa = await prisma.empresa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EmpresaFindUniqueOrThrowArgs>(args: SelectSubset<T, EmpresaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EmpresaClient<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Empresa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpresaFindFirstArgs} args - Arguments to find a Empresa
     * @example
     * // Get one Empresa
     * const empresa = await prisma.empresa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EmpresaFindFirstArgs>(args?: SelectSubset<T, EmpresaFindFirstArgs<ExtArgs>>): Prisma__EmpresaClient<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Empresa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpresaFindFirstOrThrowArgs} args - Arguments to find a Empresa
     * @example
     * // Get one Empresa
     * const empresa = await prisma.empresa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EmpresaFindFirstOrThrowArgs>(args?: SelectSubset<T, EmpresaFindFirstOrThrowArgs<ExtArgs>>): Prisma__EmpresaClient<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Empresas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpresaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Empresas
     * const empresas = await prisma.empresa.findMany()
     * 
     * // Get first 10 Empresas
     * const empresas = await prisma.empresa.findMany({ take: 10 })
     * 
     * // Only select the `empresa_id`
     * const empresaWithEmpresa_idOnly = await prisma.empresa.findMany({ select: { empresa_id: true } })
     * 
     */
    findMany<T extends EmpresaFindManyArgs>(args?: SelectSubset<T, EmpresaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Empresa.
     * @param {EmpresaCreateArgs} args - Arguments to create a Empresa.
     * @example
     * // Create one Empresa
     * const Empresa = await prisma.empresa.create({
     *   data: {
     *     // ... data to create a Empresa
     *   }
     * })
     * 
     */
    create<T extends EmpresaCreateArgs>(args: SelectSubset<T, EmpresaCreateArgs<ExtArgs>>): Prisma__EmpresaClient<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Empresas.
     * @param {EmpresaCreateManyArgs} args - Arguments to create many Empresas.
     * @example
     * // Create many Empresas
     * const empresa = await prisma.empresa.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EmpresaCreateManyArgs>(args?: SelectSubset<T, EmpresaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Empresa.
     * @param {EmpresaDeleteArgs} args - Arguments to delete one Empresa.
     * @example
     * // Delete one Empresa
     * const Empresa = await prisma.empresa.delete({
     *   where: {
     *     // ... filter to delete one Empresa
     *   }
     * })
     * 
     */
    delete<T extends EmpresaDeleteArgs>(args: SelectSubset<T, EmpresaDeleteArgs<ExtArgs>>): Prisma__EmpresaClient<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Empresa.
     * @param {EmpresaUpdateArgs} args - Arguments to update one Empresa.
     * @example
     * // Update one Empresa
     * const empresa = await prisma.empresa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EmpresaUpdateArgs>(args: SelectSubset<T, EmpresaUpdateArgs<ExtArgs>>): Prisma__EmpresaClient<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Empresas.
     * @param {EmpresaDeleteManyArgs} args - Arguments to filter Empresas to delete.
     * @example
     * // Delete a few Empresas
     * const { count } = await prisma.empresa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EmpresaDeleteManyArgs>(args?: SelectSubset<T, EmpresaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Empresas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpresaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Empresas
     * const empresa = await prisma.empresa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EmpresaUpdateManyArgs>(args: SelectSubset<T, EmpresaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Empresa.
     * @param {EmpresaUpsertArgs} args - Arguments to update or create a Empresa.
     * @example
     * // Update or create a Empresa
     * const empresa = await prisma.empresa.upsert({
     *   create: {
     *     // ... data to create a Empresa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Empresa we want to update
     *   }
     * })
     */
    upsert<T extends EmpresaUpsertArgs>(args: SelectSubset<T, EmpresaUpsertArgs<ExtArgs>>): Prisma__EmpresaClient<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Empresas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpresaCountArgs} args - Arguments to filter Empresas to count.
     * @example
     * // Count the number of Empresas
     * const count = await prisma.empresa.count({
     *   where: {
     *     // ... the filter for the Empresas we want to count
     *   }
     * })
    **/
    count<T extends EmpresaCountArgs>(
      args?: Subset<T, EmpresaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EmpresaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Empresa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpresaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EmpresaAggregateArgs>(args: Subset<T, EmpresaAggregateArgs>): Prisma.PrismaPromise<GetEmpresaAggregateType<T>>

    /**
     * Group by Empresa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpresaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EmpresaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EmpresaGroupByArgs['orderBy'] }
        : { orderBy?: EmpresaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EmpresaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEmpresaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Empresa model
   */
  readonly fields: EmpresaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Empresa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EmpresaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    detallesAccesibilidad<T extends Empresa$detallesAccesibilidadArgs<ExtArgs> = {}>(args?: Subset<T, Empresa$detallesAccesibilidadArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccesibilidadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Empresa model
   */
  interface EmpresaFieldRefs {
    readonly empresa_id: FieldRef<"Empresa", 'Int'>
    readonly nombre: FieldRef<"Empresa", 'String'>
    readonly email: FieldRef<"Empresa", 'String'>
    readonly password: FieldRef<"Empresa", 'String'>
    readonly publicado: FieldRef<"Empresa", 'Boolean'>
    readonly accesibilidad: FieldRef<"Empresa", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Empresa findUnique
   */
  export type EmpresaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
    /**
     * Filter, which Empresa to fetch.
     */
    where: EmpresaWhereUniqueInput
  }

  /**
   * Empresa findUniqueOrThrow
   */
  export type EmpresaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
    /**
     * Filter, which Empresa to fetch.
     */
    where: EmpresaWhereUniqueInput
  }

  /**
   * Empresa findFirst
   */
  export type EmpresaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
    /**
     * Filter, which Empresa to fetch.
     */
    where?: EmpresaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Empresas to fetch.
     */
    orderBy?: EmpresaOrderByWithRelationInput | EmpresaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Empresas.
     */
    cursor?: EmpresaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Empresas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Empresas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Empresas.
     */
    distinct?: EmpresaScalarFieldEnum | EmpresaScalarFieldEnum[]
  }

  /**
   * Empresa findFirstOrThrow
   */
  export type EmpresaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
    /**
     * Filter, which Empresa to fetch.
     */
    where?: EmpresaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Empresas to fetch.
     */
    orderBy?: EmpresaOrderByWithRelationInput | EmpresaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Empresas.
     */
    cursor?: EmpresaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Empresas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Empresas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Empresas.
     */
    distinct?: EmpresaScalarFieldEnum | EmpresaScalarFieldEnum[]
  }

  /**
   * Empresa findMany
   */
  export type EmpresaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
    /**
     * Filter, which Empresas to fetch.
     */
    where?: EmpresaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Empresas to fetch.
     */
    orderBy?: EmpresaOrderByWithRelationInput | EmpresaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Empresas.
     */
    cursor?: EmpresaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Empresas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Empresas.
     */
    skip?: number
    distinct?: EmpresaScalarFieldEnum | EmpresaScalarFieldEnum[]
  }

  /**
   * Empresa create
   */
  export type EmpresaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
    /**
     * The data needed to create a Empresa.
     */
    data: XOR<EmpresaCreateInput, EmpresaUncheckedCreateInput>
  }

  /**
   * Empresa createMany
   */
  export type EmpresaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Empresas.
     */
    data: EmpresaCreateManyInput | EmpresaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Empresa update
   */
  export type EmpresaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
    /**
     * The data needed to update a Empresa.
     */
    data: XOR<EmpresaUpdateInput, EmpresaUncheckedUpdateInput>
    /**
     * Choose, which Empresa to update.
     */
    where: EmpresaWhereUniqueInput
  }

  /**
   * Empresa updateMany
   */
  export type EmpresaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Empresas.
     */
    data: XOR<EmpresaUpdateManyMutationInput, EmpresaUncheckedUpdateManyInput>
    /**
     * Filter which Empresas to update
     */
    where?: EmpresaWhereInput
    /**
     * Limit how many Empresas to update.
     */
    limit?: number
  }

  /**
   * Empresa upsert
   */
  export type EmpresaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
    /**
     * The filter to search for the Empresa to update in case it exists.
     */
    where: EmpresaWhereUniqueInput
    /**
     * In case the Empresa found by the `where` argument doesn't exist, create a new Empresa with this data.
     */
    create: XOR<EmpresaCreateInput, EmpresaUncheckedCreateInput>
    /**
     * In case the Empresa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EmpresaUpdateInput, EmpresaUncheckedUpdateInput>
  }

  /**
   * Empresa delete
   */
  export type EmpresaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
    /**
     * Filter which Empresa to delete.
     */
    where: EmpresaWhereUniqueInput
  }

  /**
   * Empresa deleteMany
   */
  export type EmpresaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Empresas to delete
     */
    where?: EmpresaWhereInput
    /**
     * Limit how many Empresas to delete.
     */
    limit?: number
  }

  /**
   * Empresa.detallesAccesibilidad
   */
  export type Empresa$detallesAccesibilidadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Accesibilidad
     */
    select?: AccesibilidadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Accesibilidad
     */
    omit?: AccesibilidadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccesibilidadInclude<ExtArgs> | null
    where?: AccesibilidadWhereInput
    orderBy?: AccesibilidadOrderByWithRelationInput | AccesibilidadOrderByWithRelationInput[]
    cursor?: AccesibilidadWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AccesibilidadScalarFieldEnum | AccesibilidadScalarFieldEnum[]
  }

  /**
   * Empresa without action
   */
  export type EmpresaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
  }


  /**
   * Model Accesibilidad
   */

  export type AggregateAccesibilidad = {
    _count: AccesibilidadCountAggregateOutputType | null
    _avg: AccesibilidadAvgAggregateOutputType | null
    _sum: AccesibilidadSumAggregateOutputType | null
    _min: AccesibilidadMinAggregateOutputType | null
    _max: AccesibilidadMaxAggregateOutputType | null
  }

  export type AccesibilidadAvgAggregateOutputType = {
    accesibilidad_id: number | null
    empresa_id: number | null
  }

  export type AccesibilidadSumAggregateOutputType = {
    accesibilidad_id: number | null
    empresa_id: number | null
  }

  export type AccesibilidadMinAggregateOutputType = {
    accesibilidad_id: number | null
    empresa_id: number | null
    pasillos_min_90cm: boolean | null
    rampa: boolean | null
    puerta_80cm: boolean | null
    pisos_antideslizantes: boolean | null
    bano_accesible: boolean | null
    mesas_sillas_adaptadas: boolean | null
    ascensor: boolean | null
    senalizacion_braille: boolean | null
    contraste_colores: boolean | null
    guias_podotactiles: boolean | null
    alarmas_emergencia: boolean | null
    sistema_audifonos: boolean | null
    bano_adaptado_cantidad: string | null
    bano_adaptado_detalles: string | null
    atencion_prioritaria_tipo: string | null
    atencion_prioritaria_horario: string | null
    otros_servicios: string | null
  }

  export type AccesibilidadMaxAggregateOutputType = {
    accesibilidad_id: number | null
    empresa_id: number | null
    pasillos_min_90cm: boolean | null
    rampa: boolean | null
    puerta_80cm: boolean | null
    pisos_antideslizantes: boolean | null
    bano_accesible: boolean | null
    mesas_sillas_adaptadas: boolean | null
    ascensor: boolean | null
    senalizacion_braille: boolean | null
    contraste_colores: boolean | null
    guias_podotactiles: boolean | null
    alarmas_emergencia: boolean | null
    sistema_audifonos: boolean | null
    bano_adaptado_cantidad: string | null
    bano_adaptado_detalles: string | null
    atencion_prioritaria_tipo: string | null
    atencion_prioritaria_horario: string | null
    otros_servicios: string | null
  }

  export type AccesibilidadCountAggregateOutputType = {
    accesibilidad_id: number
    empresa_id: number
    pasillos_min_90cm: number
    rampa: number
    puerta_80cm: number
    pisos_antideslizantes: number
    bano_accesible: number
    mesas_sillas_adaptadas: number
    ascensor: number
    senalizacion_braille: number
    contraste_colores: number
    guias_podotactiles: number
    alarmas_emergencia: number
    sistema_audifonos: number
    bano_adaptado_cantidad: number
    bano_adaptado_detalles: number
    atencion_prioritaria_tipo: number
    atencion_prioritaria_horario: number
    otros_servicios: number
    _all: number
  }


  export type AccesibilidadAvgAggregateInputType = {
    accesibilidad_id?: true
    empresa_id?: true
  }

  export type AccesibilidadSumAggregateInputType = {
    accesibilidad_id?: true
    empresa_id?: true
  }

  export type AccesibilidadMinAggregateInputType = {
    accesibilidad_id?: true
    empresa_id?: true
    pasillos_min_90cm?: true
    rampa?: true
    puerta_80cm?: true
    pisos_antideslizantes?: true
    bano_accesible?: true
    mesas_sillas_adaptadas?: true
    ascensor?: true
    senalizacion_braille?: true
    contraste_colores?: true
    guias_podotactiles?: true
    alarmas_emergencia?: true
    sistema_audifonos?: true
    bano_adaptado_cantidad?: true
    bano_adaptado_detalles?: true
    atencion_prioritaria_tipo?: true
    atencion_prioritaria_horario?: true
    otros_servicios?: true
  }

  export type AccesibilidadMaxAggregateInputType = {
    accesibilidad_id?: true
    empresa_id?: true
    pasillos_min_90cm?: true
    rampa?: true
    puerta_80cm?: true
    pisos_antideslizantes?: true
    bano_accesible?: true
    mesas_sillas_adaptadas?: true
    ascensor?: true
    senalizacion_braille?: true
    contraste_colores?: true
    guias_podotactiles?: true
    alarmas_emergencia?: true
    sistema_audifonos?: true
    bano_adaptado_cantidad?: true
    bano_adaptado_detalles?: true
    atencion_prioritaria_tipo?: true
    atencion_prioritaria_horario?: true
    otros_servicios?: true
  }

  export type AccesibilidadCountAggregateInputType = {
    accesibilidad_id?: true
    empresa_id?: true
    pasillos_min_90cm?: true
    rampa?: true
    puerta_80cm?: true
    pisos_antideslizantes?: true
    bano_accesible?: true
    mesas_sillas_adaptadas?: true
    ascensor?: true
    senalizacion_braille?: true
    contraste_colores?: true
    guias_podotactiles?: true
    alarmas_emergencia?: true
    sistema_audifonos?: true
    bano_adaptado_cantidad?: true
    bano_adaptado_detalles?: true
    atencion_prioritaria_tipo?: true
    atencion_prioritaria_horario?: true
    otros_servicios?: true
    _all?: true
  }

  export type AccesibilidadAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Accesibilidad to aggregate.
     */
    where?: AccesibilidadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accesibilidads to fetch.
     */
    orderBy?: AccesibilidadOrderByWithRelationInput | AccesibilidadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AccesibilidadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accesibilidads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accesibilidads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Accesibilidads
    **/
    _count?: true | AccesibilidadCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AccesibilidadAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AccesibilidadSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AccesibilidadMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AccesibilidadMaxAggregateInputType
  }

  export type GetAccesibilidadAggregateType<T extends AccesibilidadAggregateArgs> = {
        [P in keyof T & keyof AggregateAccesibilidad]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccesibilidad[P]>
      : GetScalarType<T[P], AggregateAccesibilidad[P]>
  }




  export type AccesibilidadGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccesibilidadWhereInput
    orderBy?: AccesibilidadOrderByWithAggregationInput | AccesibilidadOrderByWithAggregationInput[]
    by: AccesibilidadScalarFieldEnum[] | AccesibilidadScalarFieldEnum
    having?: AccesibilidadScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AccesibilidadCountAggregateInputType | true
    _avg?: AccesibilidadAvgAggregateInputType
    _sum?: AccesibilidadSumAggregateInputType
    _min?: AccesibilidadMinAggregateInputType
    _max?: AccesibilidadMaxAggregateInputType
  }

  export type AccesibilidadGroupByOutputType = {
    accesibilidad_id: number
    empresa_id: number
    pasillos_min_90cm: boolean
    rampa: boolean
    puerta_80cm: boolean
    pisos_antideslizantes: boolean
    bano_accesible: boolean
    mesas_sillas_adaptadas: boolean
    ascensor: boolean
    senalizacion_braille: boolean
    contraste_colores: boolean
    guias_podotactiles: boolean
    alarmas_emergencia: boolean
    sistema_audifonos: boolean
    bano_adaptado_cantidad: string | null
    bano_adaptado_detalles: string | null
    atencion_prioritaria_tipo: string | null
    atencion_prioritaria_horario: string | null
    otros_servicios: string | null
    _count: AccesibilidadCountAggregateOutputType | null
    _avg: AccesibilidadAvgAggregateOutputType | null
    _sum: AccesibilidadSumAggregateOutputType | null
    _min: AccesibilidadMinAggregateOutputType | null
    _max: AccesibilidadMaxAggregateOutputType | null
  }

  type GetAccesibilidadGroupByPayload<T extends AccesibilidadGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AccesibilidadGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AccesibilidadGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AccesibilidadGroupByOutputType[P]>
            : GetScalarType<T[P], AccesibilidadGroupByOutputType[P]>
        }
      >
    >


  export type AccesibilidadSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    accesibilidad_id?: boolean
    empresa_id?: boolean
    pasillos_min_90cm?: boolean
    rampa?: boolean
    puerta_80cm?: boolean
    pisos_antideslizantes?: boolean
    bano_accesible?: boolean
    mesas_sillas_adaptadas?: boolean
    ascensor?: boolean
    senalizacion_braille?: boolean
    contraste_colores?: boolean
    guias_podotactiles?: boolean
    alarmas_emergencia?: boolean
    sistema_audifonos?: boolean
    bano_adaptado_cantidad?: boolean
    bano_adaptado_detalles?: boolean
    atencion_prioritaria_tipo?: boolean
    atencion_prioritaria_horario?: boolean
    otros_servicios?: boolean
    empresa?: boolean | EmpresaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["accesibilidad"]>



  export type AccesibilidadSelectScalar = {
    accesibilidad_id?: boolean
    empresa_id?: boolean
    pasillos_min_90cm?: boolean
    rampa?: boolean
    puerta_80cm?: boolean
    pisos_antideslizantes?: boolean
    bano_accesible?: boolean
    mesas_sillas_adaptadas?: boolean
    ascensor?: boolean
    senalizacion_braille?: boolean
    contraste_colores?: boolean
    guias_podotactiles?: boolean
    alarmas_emergencia?: boolean
    sistema_audifonos?: boolean
    bano_adaptado_cantidad?: boolean
    bano_adaptado_detalles?: boolean
    atencion_prioritaria_tipo?: boolean
    atencion_prioritaria_horario?: boolean
    otros_servicios?: boolean
  }

  export type AccesibilidadOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"accesibilidad_id" | "empresa_id" | "pasillos_min_90cm" | "rampa" | "puerta_80cm" | "pisos_antideslizantes" | "bano_accesible" | "mesas_sillas_adaptadas" | "ascensor" | "senalizacion_braille" | "contraste_colores" | "guias_podotactiles" | "alarmas_emergencia" | "sistema_audifonos" | "bano_adaptado_cantidad" | "bano_adaptado_detalles" | "atencion_prioritaria_tipo" | "atencion_prioritaria_horario" | "otros_servicios", ExtArgs["result"]["accesibilidad"]>
  export type AccesibilidadInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    empresa?: boolean | EmpresaDefaultArgs<ExtArgs>
  }

  export type $AccesibilidadPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Accesibilidad"
    objects: {
      empresa: Prisma.$EmpresaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      accesibilidad_id: number
      empresa_id: number
      pasillos_min_90cm: boolean
      rampa: boolean
      puerta_80cm: boolean
      pisos_antideslizantes: boolean
      bano_accesible: boolean
      mesas_sillas_adaptadas: boolean
      ascensor: boolean
      senalizacion_braille: boolean
      contraste_colores: boolean
      guias_podotactiles: boolean
      alarmas_emergencia: boolean
      sistema_audifonos: boolean
      bano_adaptado_cantidad: string | null
      bano_adaptado_detalles: string | null
      atencion_prioritaria_tipo: string | null
      atencion_prioritaria_horario: string | null
      otros_servicios: string | null
    }, ExtArgs["result"]["accesibilidad"]>
    composites: {}
  }

  type AccesibilidadGetPayload<S extends boolean | null | undefined | AccesibilidadDefaultArgs> = $Result.GetResult<Prisma.$AccesibilidadPayload, S>

  type AccesibilidadCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AccesibilidadFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AccesibilidadCountAggregateInputType | true
    }

  export interface AccesibilidadDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Accesibilidad'], meta: { name: 'Accesibilidad' } }
    /**
     * Find zero or one Accesibilidad that matches the filter.
     * @param {AccesibilidadFindUniqueArgs} args - Arguments to find a Accesibilidad
     * @example
     * // Get one Accesibilidad
     * const accesibilidad = await prisma.accesibilidad.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AccesibilidadFindUniqueArgs>(args: SelectSubset<T, AccesibilidadFindUniqueArgs<ExtArgs>>): Prisma__AccesibilidadClient<$Result.GetResult<Prisma.$AccesibilidadPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Accesibilidad that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AccesibilidadFindUniqueOrThrowArgs} args - Arguments to find a Accesibilidad
     * @example
     * // Get one Accesibilidad
     * const accesibilidad = await prisma.accesibilidad.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AccesibilidadFindUniqueOrThrowArgs>(args: SelectSubset<T, AccesibilidadFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AccesibilidadClient<$Result.GetResult<Prisma.$AccesibilidadPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Accesibilidad that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccesibilidadFindFirstArgs} args - Arguments to find a Accesibilidad
     * @example
     * // Get one Accesibilidad
     * const accesibilidad = await prisma.accesibilidad.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AccesibilidadFindFirstArgs>(args?: SelectSubset<T, AccesibilidadFindFirstArgs<ExtArgs>>): Prisma__AccesibilidadClient<$Result.GetResult<Prisma.$AccesibilidadPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Accesibilidad that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccesibilidadFindFirstOrThrowArgs} args - Arguments to find a Accesibilidad
     * @example
     * // Get one Accesibilidad
     * const accesibilidad = await prisma.accesibilidad.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AccesibilidadFindFirstOrThrowArgs>(args?: SelectSubset<T, AccesibilidadFindFirstOrThrowArgs<ExtArgs>>): Prisma__AccesibilidadClient<$Result.GetResult<Prisma.$AccesibilidadPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Accesibilidads that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccesibilidadFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Accesibilidads
     * const accesibilidads = await prisma.accesibilidad.findMany()
     * 
     * // Get first 10 Accesibilidads
     * const accesibilidads = await prisma.accesibilidad.findMany({ take: 10 })
     * 
     * // Only select the `accesibilidad_id`
     * const accesibilidadWithAccesibilidad_idOnly = await prisma.accesibilidad.findMany({ select: { accesibilidad_id: true } })
     * 
     */
    findMany<T extends AccesibilidadFindManyArgs>(args?: SelectSubset<T, AccesibilidadFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccesibilidadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Accesibilidad.
     * @param {AccesibilidadCreateArgs} args - Arguments to create a Accesibilidad.
     * @example
     * // Create one Accesibilidad
     * const Accesibilidad = await prisma.accesibilidad.create({
     *   data: {
     *     // ... data to create a Accesibilidad
     *   }
     * })
     * 
     */
    create<T extends AccesibilidadCreateArgs>(args: SelectSubset<T, AccesibilidadCreateArgs<ExtArgs>>): Prisma__AccesibilidadClient<$Result.GetResult<Prisma.$AccesibilidadPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Accesibilidads.
     * @param {AccesibilidadCreateManyArgs} args - Arguments to create many Accesibilidads.
     * @example
     * // Create many Accesibilidads
     * const accesibilidad = await prisma.accesibilidad.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AccesibilidadCreateManyArgs>(args?: SelectSubset<T, AccesibilidadCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Accesibilidad.
     * @param {AccesibilidadDeleteArgs} args - Arguments to delete one Accesibilidad.
     * @example
     * // Delete one Accesibilidad
     * const Accesibilidad = await prisma.accesibilidad.delete({
     *   where: {
     *     // ... filter to delete one Accesibilidad
     *   }
     * })
     * 
     */
    delete<T extends AccesibilidadDeleteArgs>(args: SelectSubset<T, AccesibilidadDeleteArgs<ExtArgs>>): Prisma__AccesibilidadClient<$Result.GetResult<Prisma.$AccesibilidadPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Accesibilidad.
     * @param {AccesibilidadUpdateArgs} args - Arguments to update one Accesibilidad.
     * @example
     * // Update one Accesibilidad
     * const accesibilidad = await prisma.accesibilidad.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AccesibilidadUpdateArgs>(args: SelectSubset<T, AccesibilidadUpdateArgs<ExtArgs>>): Prisma__AccesibilidadClient<$Result.GetResult<Prisma.$AccesibilidadPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Accesibilidads.
     * @param {AccesibilidadDeleteManyArgs} args - Arguments to filter Accesibilidads to delete.
     * @example
     * // Delete a few Accesibilidads
     * const { count } = await prisma.accesibilidad.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AccesibilidadDeleteManyArgs>(args?: SelectSubset<T, AccesibilidadDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accesibilidads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccesibilidadUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Accesibilidads
     * const accesibilidad = await prisma.accesibilidad.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AccesibilidadUpdateManyArgs>(args: SelectSubset<T, AccesibilidadUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Accesibilidad.
     * @param {AccesibilidadUpsertArgs} args - Arguments to update or create a Accesibilidad.
     * @example
     * // Update or create a Accesibilidad
     * const accesibilidad = await prisma.accesibilidad.upsert({
     *   create: {
     *     // ... data to create a Accesibilidad
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Accesibilidad we want to update
     *   }
     * })
     */
    upsert<T extends AccesibilidadUpsertArgs>(args: SelectSubset<T, AccesibilidadUpsertArgs<ExtArgs>>): Prisma__AccesibilidadClient<$Result.GetResult<Prisma.$AccesibilidadPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Accesibilidads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccesibilidadCountArgs} args - Arguments to filter Accesibilidads to count.
     * @example
     * // Count the number of Accesibilidads
     * const count = await prisma.accesibilidad.count({
     *   where: {
     *     // ... the filter for the Accesibilidads we want to count
     *   }
     * })
    **/
    count<T extends AccesibilidadCountArgs>(
      args?: Subset<T, AccesibilidadCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AccesibilidadCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Accesibilidad.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccesibilidadAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AccesibilidadAggregateArgs>(args: Subset<T, AccesibilidadAggregateArgs>): Prisma.PrismaPromise<GetAccesibilidadAggregateType<T>>

    /**
     * Group by Accesibilidad.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccesibilidadGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AccesibilidadGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AccesibilidadGroupByArgs['orderBy'] }
        : { orderBy?: AccesibilidadGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AccesibilidadGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccesibilidadGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Accesibilidad model
   */
  readonly fields: AccesibilidadFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Accesibilidad.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AccesibilidadClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    empresa<T extends EmpresaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EmpresaDefaultArgs<ExtArgs>>): Prisma__EmpresaClient<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Accesibilidad model
   */
  interface AccesibilidadFieldRefs {
    readonly accesibilidad_id: FieldRef<"Accesibilidad", 'Int'>
    readonly empresa_id: FieldRef<"Accesibilidad", 'Int'>
    readonly pasillos_min_90cm: FieldRef<"Accesibilidad", 'Boolean'>
    readonly rampa: FieldRef<"Accesibilidad", 'Boolean'>
    readonly puerta_80cm: FieldRef<"Accesibilidad", 'Boolean'>
    readonly pisos_antideslizantes: FieldRef<"Accesibilidad", 'Boolean'>
    readonly bano_accesible: FieldRef<"Accesibilidad", 'Boolean'>
    readonly mesas_sillas_adaptadas: FieldRef<"Accesibilidad", 'Boolean'>
    readonly ascensor: FieldRef<"Accesibilidad", 'Boolean'>
    readonly senalizacion_braille: FieldRef<"Accesibilidad", 'Boolean'>
    readonly contraste_colores: FieldRef<"Accesibilidad", 'Boolean'>
    readonly guias_podotactiles: FieldRef<"Accesibilidad", 'Boolean'>
    readonly alarmas_emergencia: FieldRef<"Accesibilidad", 'Boolean'>
    readonly sistema_audifonos: FieldRef<"Accesibilidad", 'Boolean'>
    readonly bano_adaptado_cantidad: FieldRef<"Accesibilidad", 'String'>
    readonly bano_adaptado_detalles: FieldRef<"Accesibilidad", 'String'>
    readonly atencion_prioritaria_tipo: FieldRef<"Accesibilidad", 'String'>
    readonly atencion_prioritaria_horario: FieldRef<"Accesibilidad", 'String'>
    readonly otros_servicios: FieldRef<"Accesibilidad", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Accesibilidad findUnique
   */
  export type AccesibilidadFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Accesibilidad
     */
    select?: AccesibilidadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Accesibilidad
     */
    omit?: AccesibilidadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccesibilidadInclude<ExtArgs> | null
    /**
     * Filter, which Accesibilidad to fetch.
     */
    where: AccesibilidadWhereUniqueInput
  }

  /**
   * Accesibilidad findUniqueOrThrow
   */
  export type AccesibilidadFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Accesibilidad
     */
    select?: AccesibilidadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Accesibilidad
     */
    omit?: AccesibilidadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccesibilidadInclude<ExtArgs> | null
    /**
     * Filter, which Accesibilidad to fetch.
     */
    where: AccesibilidadWhereUniqueInput
  }

  /**
   * Accesibilidad findFirst
   */
  export type AccesibilidadFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Accesibilidad
     */
    select?: AccesibilidadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Accesibilidad
     */
    omit?: AccesibilidadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccesibilidadInclude<ExtArgs> | null
    /**
     * Filter, which Accesibilidad to fetch.
     */
    where?: AccesibilidadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accesibilidads to fetch.
     */
    orderBy?: AccesibilidadOrderByWithRelationInput | AccesibilidadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accesibilidads.
     */
    cursor?: AccesibilidadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accesibilidads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accesibilidads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accesibilidads.
     */
    distinct?: AccesibilidadScalarFieldEnum | AccesibilidadScalarFieldEnum[]
  }

  /**
   * Accesibilidad findFirstOrThrow
   */
  export type AccesibilidadFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Accesibilidad
     */
    select?: AccesibilidadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Accesibilidad
     */
    omit?: AccesibilidadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccesibilidadInclude<ExtArgs> | null
    /**
     * Filter, which Accesibilidad to fetch.
     */
    where?: AccesibilidadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accesibilidads to fetch.
     */
    orderBy?: AccesibilidadOrderByWithRelationInput | AccesibilidadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accesibilidads.
     */
    cursor?: AccesibilidadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accesibilidads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accesibilidads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accesibilidads.
     */
    distinct?: AccesibilidadScalarFieldEnum | AccesibilidadScalarFieldEnum[]
  }

  /**
   * Accesibilidad findMany
   */
  export type AccesibilidadFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Accesibilidad
     */
    select?: AccesibilidadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Accesibilidad
     */
    omit?: AccesibilidadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccesibilidadInclude<ExtArgs> | null
    /**
     * Filter, which Accesibilidads to fetch.
     */
    where?: AccesibilidadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accesibilidads to fetch.
     */
    orderBy?: AccesibilidadOrderByWithRelationInput | AccesibilidadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Accesibilidads.
     */
    cursor?: AccesibilidadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accesibilidads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accesibilidads.
     */
    skip?: number
    distinct?: AccesibilidadScalarFieldEnum | AccesibilidadScalarFieldEnum[]
  }

  /**
   * Accesibilidad create
   */
  export type AccesibilidadCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Accesibilidad
     */
    select?: AccesibilidadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Accesibilidad
     */
    omit?: AccesibilidadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccesibilidadInclude<ExtArgs> | null
    /**
     * The data needed to create a Accesibilidad.
     */
    data: XOR<AccesibilidadCreateInput, AccesibilidadUncheckedCreateInput>
  }

  /**
   * Accesibilidad createMany
   */
  export type AccesibilidadCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Accesibilidads.
     */
    data: AccesibilidadCreateManyInput | AccesibilidadCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Accesibilidad update
   */
  export type AccesibilidadUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Accesibilidad
     */
    select?: AccesibilidadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Accesibilidad
     */
    omit?: AccesibilidadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccesibilidadInclude<ExtArgs> | null
    /**
     * The data needed to update a Accesibilidad.
     */
    data: XOR<AccesibilidadUpdateInput, AccesibilidadUncheckedUpdateInput>
    /**
     * Choose, which Accesibilidad to update.
     */
    where: AccesibilidadWhereUniqueInput
  }

  /**
   * Accesibilidad updateMany
   */
  export type AccesibilidadUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Accesibilidads.
     */
    data: XOR<AccesibilidadUpdateManyMutationInput, AccesibilidadUncheckedUpdateManyInput>
    /**
     * Filter which Accesibilidads to update
     */
    where?: AccesibilidadWhereInput
    /**
     * Limit how many Accesibilidads to update.
     */
    limit?: number
  }

  /**
   * Accesibilidad upsert
   */
  export type AccesibilidadUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Accesibilidad
     */
    select?: AccesibilidadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Accesibilidad
     */
    omit?: AccesibilidadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccesibilidadInclude<ExtArgs> | null
    /**
     * The filter to search for the Accesibilidad to update in case it exists.
     */
    where: AccesibilidadWhereUniqueInput
    /**
     * In case the Accesibilidad found by the `where` argument doesn't exist, create a new Accesibilidad with this data.
     */
    create: XOR<AccesibilidadCreateInput, AccesibilidadUncheckedCreateInput>
    /**
     * In case the Accesibilidad was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AccesibilidadUpdateInput, AccesibilidadUncheckedUpdateInput>
  }

  /**
   * Accesibilidad delete
   */
  export type AccesibilidadDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Accesibilidad
     */
    select?: AccesibilidadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Accesibilidad
     */
    omit?: AccesibilidadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccesibilidadInclude<ExtArgs> | null
    /**
     * Filter which Accesibilidad to delete.
     */
    where: AccesibilidadWhereUniqueInput
  }

  /**
   * Accesibilidad deleteMany
   */
  export type AccesibilidadDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Accesibilidads to delete
     */
    where?: AccesibilidadWhereInput
    /**
     * Limit how many Accesibilidads to delete.
     */
    limit?: number
  }

  /**
   * Accesibilidad without action
   */
  export type AccesibilidadDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Accesibilidad
     */
    select?: AccesibilidadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Accesibilidad
     */
    omit?: AccesibilidadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccesibilidadInclude<ExtArgs> | null
  }


  /**
   * Model Contact
   */

  export type AggregateContact = {
    _count: ContactCountAggregateOutputType | null
    _avg: ContactAvgAggregateOutputType | null
    _sum: ContactSumAggregateOutputType | null
    _min: ContactMinAggregateOutputType | null
    _max: ContactMaxAggregateOutputType | null
  }

  export type ContactAvgAggregateOutputType = {
    contact_id: number | null
  }

  export type ContactSumAggregateOutputType = {
    contact_id: number | null
  }

  export type ContactMinAggregateOutputType = {
    contact_id: number | null
    name: string | null
    email: string | null
    message: string | null
    createdAt: Date | null
  }

  export type ContactMaxAggregateOutputType = {
    contact_id: number | null
    name: string | null
    email: string | null
    message: string | null
    createdAt: Date | null
  }

  export type ContactCountAggregateOutputType = {
    contact_id: number
    name: number
    email: number
    message: number
    createdAt: number
    _all: number
  }


  export type ContactAvgAggregateInputType = {
    contact_id?: true
  }

  export type ContactSumAggregateInputType = {
    contact_id?: true
  }

  export type ContactMinAggregateInputType = {
    contact_id?: true
    name?: true
    email?: true
    message?: true
    createdAt?: true
  }

  export type ContactMaxAggregateInputType = {
    contact_id?: true
    name?: true
    email?: true
    message?: true
    createdAt?: true
  }

  export type ContactCountAggregateInputType = {
    contact_id?: true
    name?: true
    email?: true
    message?: true
    createdAt?: true
    _all?: true
  }

  export type ContactAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Contact to aggregate.
     */
    where?: ContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contacts to fetch.
     */
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Contacts
    **/
    _count?: true | ContactCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ContactAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ContactSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ContactMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ContactMaxAggregateInputType
  }

  export type GetContactAggregateType<T extends ContactAggregateArgs> = {
        [P in keyof T & keyof AggregateContact]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateContact[P]>
      : GetScalarType<T[P], AggregateContact[P]>
  }




  export type ContactGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ContactWhereInput
    orderBy?: ContactOrderByWithAggregationInput | ContactOrderByWithAggregationInput[]
    by: ContactScalarFieldEnum[] | ContactScalarFieldEnum
    having?: ContactScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ContactCountAggregateInputType | true
    _avg?: ContactAvgAggregateInputType
    _sum?: ContactSumAggregateInputType
    _min?: ContactMinAggregateInputType
    _max?: ContactMaxAggregateInputType
  }

  export type ContactGroupByOutputType = {
    contact_id: number
    name: string
    email: string
    message: string
    createdAt: Date
    _count: ContactCountAggregateOutputType | null
    _avg: ContactAvgAggregateOutputType | null
    _sum: ContactSumAggregateOutputType | null
    _min: ContactMinAggregateOutputType | null
    _max: ContactMaxAggregateOutputType | null
  }

  type GetContactGroupByPayload<T extends ContactGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ContactGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ContactGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ContactGroupByOutputType[P]>
            : GetScalarType<T[P], ContactGroupByOutputType[P]>
        }
      >
    >


  export type ContactSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    contact_id?: boolean
    name?: boolean
    email?: boolean
    message?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["contact"]>



  export type ContactSelectScalar = {
    contact_id?: boolean
    name?: boolean
    email?: boolean
    message?: boolean
    createdAt?: boolean
  }

  export type ContactOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"contact_id" | "name" | "email" | "message" | "createdAt", ExtArgs["result"]["contact"]>

  export type $ContactPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Contact"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      contact_id: number
      name: string
      email: string
      message: string
      createdAt: Date
    }, ExtArgs["result"]["contact"]>
    composites: {}
  }

  type ContactGetPayload<S extends boolean | null | undefined | ContactDefaultArgs> = $Result.GetResult<Prisma.$ContactPayload, S>

  type ContactCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ContactFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ContactCountAggregateInputType | true
    }

  export interface ContactDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Contact'], meta: { name: 'Contact' } }
    /**
     * Find zero or one Contact that matches the filter.
     * @param {ContactFindUniqueArgs} args - Arguments to find a Contact
     * @example
     * // Get one Contact
     * const contact = await prisma.contact.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ContactFindUniqueArgs>(args: SelectSubset<T, ContactFindUniqueArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Contact that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ContactFindUniqueOrThrowArgs} args - Arguments to find a Contact
     * @example
     * // Get one Contact
     * const contact = await prisma.contact.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ContactFindUniqueOrThrowArgs>(args: SelectSubset<T, ContactFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Contact that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactFindFirstArgs} args - Arguments to find a Contact
     * @example
     * // Get one Contact
     * const contact = await prisma.contact.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ContactFindFirstArgs>(args?: SelectSubset<T, ContactFindFirstArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Contact that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactFindFirstOrThrowArgs} args - Arguments to find a Contact
     * @example
     * // Get one Contact
     * const contact = await prisma.contact.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ContactFindFirstOrThrowArgs>(args?: SelectSubset<T, ContactFindFirstOrThrowArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Contacts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Contacts
     * const contacts = await prisma.contact.findMany()
     * 
     * // Get first 10 Contacts
     * const contacts = await prisma.contact.findMany({ take: 10 })
     * 
     * // Only select the `contact_id`
     * const contactWithContact_idOnly = await prisma.contact.findMany({ select: { contact_id: true } })
     * 
     */
    findMany<T extends ContactFindManyArgs>(args?: SelectSubset<T, ContactFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Contact.
     * @param {ContactCreateArgs} args - Arguments to create a Contact.
     * @example
     * // Create one Contact
     * const Contact = await prisma.contact.create({
     *   data: {
     *     // ... data to create a Contact
     *   }
     * })
     * 
     */
    create<T extends ContactCreateArgs>(args: SelectSubset<T, ContactCreateArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Contacts.
     * @param {ContactCreateManyArgs} args - Arguments to create many Contacts.
     * @example
     * // Create many Contacts
     * const contact = await prisma.contact.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ContactCreateManyArgs>(args?: SelectSubset<T, ContactCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Contact.
     * @param {ContactDeleteArgs} args - Arguments to delete one Contact.
     * @example
     * // Delete one Contact
     * const Contact = await prisma.contact.delete({
     *   where: {
     *     // ... filter to delete one Contact
     *   }
     * })
     * 
     */
    delete<T extends ContactDeleteArgs>(args: SelectSubset<T, ContactDeleteArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Contact.
     * @param {ContactUpdateArgs} args - Arguments to update one Contact.
     * @example
     * // Update one Contact
     * const contact = await prisma.contact.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ContactUpdateArgs>(args: SelectSubset<T, ContactUpdateArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Contacts.
     * @param {ContactDeleteManyArgs} args - Arguments to filter Contacts to delete.
     * @example
     * // Delete a few Contacts
     * const { count } = await prisma.contact.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ContactDeleteManyArgs>(args?: SelectSubset<T, ContactDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Contacts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Contacts
     * const contact = await prisma.contact.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ContactUpdateManyArgs>(args: SelectSubset<T, ContactUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Contact.
     * @param {ContactUpsertArgs} args - Arguments to update or create a Contact.
     * @example
     * // Update or create a Contact
     * const contact = await prisma.contact.upsert({
     *   create: {
     *     // ... data to create a Contact
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Contact we want to update
     *   }
     * })
     */
    upsert<T extends ContactUpsertArgs>(args: SelectSubset<T, ContactUpsertArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Contacts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactCountArgs} args - Arguments to filter Contacts to count.
     * @example
     * // Count the number of Contacts
     * const count = await prisma.contact.count({
     *   where: {
     *     // ... the filter for the Contacts we want to count
     *   }
     * })
    **/
    count<T extends ContactCountArgs>(
      args?: Subset<T, ContactCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ContactCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Contact.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ContactAggregateArgs>(args: Subset<T, ContactAggregateArgs>): Prisma.PrismaPromise<GetContactAggregateType<T>>

    /**
     * Group by Contact.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ContactGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ContactGroupByArgs['orderBy'] }
        : { orderBy?: ContactGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ContactGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetContactGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Contact model
   */
  readonly fields: ContactFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Contact.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ContactClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Contact model
   */
  interface ContactFieldRefs {
    readonly contact_id: FieldRef<"Contact", 'Int'>
    readonly name: FieldRef<"Contact", 'String'>
    readonly email: FieldRef<"Contact", 'String'>
    readonly message: FieldRef<"Contact", 'String'>
    readonly createdAt: FieldRef<"Contact", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Contact findUnique
   */
  export type ContactFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Filter, which Contact to fetch.
     */
    where: ContactWhereUniqueInput
  }

  /**
   * Contact findUniqueOrThrow
   */
  export type ContactFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Filter, which Contact to fetch.
     */
    where: ContactWhereUniqueInput
  }

  /**
   * Contact findFirst
   */
  export type ContactFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Filter, which Contact to fetch.
     */
    where?: ContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contacts to fetch.
     */
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Contacts.
     */
    cursor?: ContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Contacts.
     */
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }

  /**
   * Contact findFirstOrThrow
   */
  export type ContactFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Filter, which Contact to fetch.
     */
    where?: ContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contacts to fetch.
     */
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Contacts.
     */
    cursor?: ContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Contacts.
     */
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }

  /**
   * Contact findMany
   */
  export type ContactFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Filter, which Contacts to fetch.
     */
    where?: ContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contacts to fetch.
     */
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Contacts.
     */
    cursor?: ContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contacts.
     */
    skip?: number
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }

  /**
   * Contact create
   */
  export type ContactCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * The data needed to create a Contact.
     */
    data: XOR<ContactCreateInput, ContactUncheckedCreateInput>
  }

  /**
   * Contact createMany
   */
  export type ContactCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Contacts.
     */
    data: ContactCreateManyInput | ContactCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Contact update
   */
  export type ContactUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * The data needed to update a Contact.
     */
    data: XOR<ContactUpdateInput, ContactUncheckedUpdateInput>
    /**
     * Choose, which Contact to update.
     */
    where: ContactWhereUniqueInput
  }

  /**
   * Contact updateMany
   */
  export type ContactUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Contacts.
     */
    data: XOR<ContactUpdateManyMutationInput, ContactUncheckedUpdateManyInput>
    /**
     * Filter which Contacts to update
     */
    where?: ContactWhereInput
    /**
     * Limit how many Contacts to update.
     */
    limit?: number
  }

  /**
   * Contact upsert
   */
  export type ContactUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * The filter to search for the Contact to update in case it exists.
     */
    where: ContactWhereUniqueInput
    /**
     * In case the Contact found by the `where` argument doesn't exist, create a new Contact with this data.
     */
    create: XOR<ContactCreateInput, ContactUncheckedCreateInput>
    /**
     * In case the Contact was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ContactUpdateInput, ContactUncheckedUpdateInput>
  }

  /**
   * Contact delete
   */
  export type ContactDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Filter which Contact to delete.
     */
    where: ContactWhereUniqueInput
  }

  /**
   * Contact deleteMany
   */
  export type ContactDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Contacts to delete
     */
    where?: ContactWhereInput
    /**
     * Limit how many Contacts to delete.
     */
    limit?: number
  }

  /**
   * Contact without action
   */
  export type ContactDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UsuarioScalarFieldEnum: {
    usuario_id: 'usuario_id',
    nombre: 'nombre',
    email: 'email',
    password: 'password',
    publicado: 'publicado'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const EmpresaScalarFieldEnum: {
    empresa_id: 'empresa_id',
    nombre: 'nombre',
    email: 'email',
    password: 'password',
    publicado: 'publicado',
    accesibilidad: 'accesibilidad'
  };

  export type EmpresaScalarFieldEnum = (typeof EmpresaScalarFieldEnum)[keyof typeof EmpresaScalarFieldEnum]


  export const AccesibilidadScalarFieldEnum: {
    accesibilidad_id: 'accesibilidad_id',
    empresa_id: 'empresa_id',
    pasillos_min_90cm: 'pasillos_min_90cm',
    rampa: 'rampa',
    puerta_80cm: 'puerta_80cm',
    pisos_antideslizantes: 'pisos_antideslizantes',
    bano_accesible: 'bano_accesible',
    mesas_sillas_adaptadas: 'mesas_sillas_adaptadas',
    ascensor: 'ascensor',
    senalizacion_braille: 'senalizacion_braille',
    contraste_colores: 'contraste_colores',
    guias_podotactiles: 'guias_podotactiles',
    alarmas_emergencia: 'alarmas_emergencia',
    sistema_audifonos: 'sistema_audifonos',
    bano_adaptado_cantidad: 'bano_adaptado_cantidad',
    bano_adaptado_detalles: 'bano_adaptado_detalles',
    atencion_prioritaria_tipo: 'atencion_prioritaria_tipo',
    atencion_prioritaria_horario: 'atencion_prioritaria_horario',
    otros_servicios: 'otros_servicios'
  };

  export type AccesibilidadScalarFieldEnum = (typeof AccesibilidadScalarFieldEnum)[keyof typeof AccesibilidadScalarFieldEnum]


  export const ContactScalarFieldEnum: {
    contact_id: 'contact_id',
    name: 'name',
    email: 'email',
    message: 'message',
    createdAt: 'createdAt'
  };

  export type ContactScalarFieldEnum = (typeof ContactScalarFieldEnum)[keyof typeof ContactScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const UsuarioOrderByRelevanceFieldEnum: {
    nombre: 'nombre',
    email: 'email',
    password: 'password'
  };

  export type UsuarioOrderByRelevanceFieldEnum = (typeof UsuarioOrderByRelevanceFieldEnum)[keyof typeof UsuarioOrderByRelevanceFieldEnum]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const EmpresaOrderByRelevanceFieldEnum: {
    nombre: 'nombre',
    email: 'email',
    password: 'password',
    accesibilidad: 'accesibilidad'
  };

  export type EmpresaOrderByRelevanceFieldEnum = (typeof EmpresaOrderByRelevanceFieldEnum)[keyof typeof EmpresaOrderByRelevanceFieldEnum]


  export const AccesibilidadOrderByRelevanceFieldEnum: {
    bano_adaptado_cantidad: 'bano_adaptado_cantidad',
    bano_adaptado_detalles: 'bano_adaptado_detalles',
    atencion_prioritaria_tipo: 'atencion_prioritaria_tipo',
    atencion_prioritaria_horario: 'atencion_prioritaria_horario',
    otros_servicios: 'otros_servicios'
  };

  export type AccesibilidadOrderByRelevanceFieldEnum = (typeof AccesibilidadOrderByRelevanceFieldEnum)[keyof typeof AccesibilidadOrderByRelevanceFieldEnum]


  export const ContactOrderByRelevanceFieldEnum: {
    name: 'name',
    email: 'email',
    message: 'message'
  };

  export type ContactOrderByRelevanceFieldEnum = (typeof ContactOrderByRelevanceFieldEnum)[keyof typeof ContactOrderByRelevanceFieldEnum]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type UsuarioWhereInput = {
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    usuario_id?: IntFilter<"Usuario"> | number
    nombre?: StringFilter<"Usuario"> | string
    email?: StringFilter<"Usuario"> | string
    password?: StringFilter<"Usuario"> | string
    publicado?: BoolFilter<"Usuario"> | boolean
  }

  export type UsuarioOrderByWithRelationInput = {
    usuario_id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    publicado?: SortOrder
    _relevance?: UsuarioOrderByRelevanceInput
  }

  export type UsuarioWhereUniqueInput = Prisma.AtLeast<{
    usuario_id?: number
    email?: string
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    nombre?: StringFilter<"Usuario"> | string
    password?: StringFilter<"Usuario"> | string
    publicado?: BoolFilter<"Usuario"> | boolean
  }, "usuario_id" | "email">

  export type UsuarioOrderByWithAggregationInput = {
    usuario_id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    publicado?: SortOrder
    _count?: UsuarioCountOrderByAggregateInput
    _avg?: UsuarioAvgOrderByAggregateInput
    _max?: UsuarioMaxOrderByAggregateInput
    _min?: UsuarioMinOrderByAggregateInput
    _sum?: UsuarioSumOrderByAggregateInput
  }

  export type UsuarioScalarWhereWithAggregatesInput = {
    AND?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    OR?: UsuarioScalarWhereWithAggregatesInput[]
    NOT?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    usuario_id?: IntWithAggregatesFilter<"Usuario"> | number
    nombre?: StringWithAggregatesFilter<"Usuario"> | string
    email?: StringWithAggregatesFilter<"Usuario"> | string
    password?: StringWithAggregatesFilter<"Usuario"> | string
    publicado?: BoolWithAggregatesFilter<"Usuario"> | boolean
  }

  export type EmpresaWhereInput = {
    AND?: EmpresaWhereInput | EmpresaWhereInput[]
    OR?: EmpresaWhereInput[]
    NOT?: EmpresaWhereInput | EmpresaWhereInput[]
    empresa_id?: IntFilter<"Empresa"> | number
    nombre?: StringFilter<"Empresa"> | string
    email?: StringFilter<"Empresa"> | string
    password?: StringFilter<"Empresa"> | string
    publicado?: BoolFilter<"Empresa"> | boolean
    accesibilidad?: StringNullableFilter<"Empresa"> | string | null
    detallesAccesibilidad?: AccesibilidadListRelationFilter
  }

  export type EmpresaOrderByWithRelationInput = {
    empresa_id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    publicado?: SortOrder
    accesibilidad?: SortOrderInput | SortOrder
    detallesAccesibilidad?: AccesibilidadOrderByRelationAggregateInput
    _relevance?: EmpresaOrderByRelevanceInput
  }

  export type EmpresaWhereUniqueInput = Prisma.AtLeast<{
    empresa_id?: number
    email?: string
    AND?: EmpresaWhereInput | EmpresaWhereInput[]
    OR?: EmpresaWhereInput[]
    NOT?: EmpresaWhereInput | EmpresaWhereInput[]
    nombre?: StringFilter<"Empresa"> | string
    password?: StringFilter<"Empresa"> | string
    publicado?: BoolFilter<"Empresa"> | boolean
    accesibilidad?: StringNullableFilter<"Empresa"> | string | null
    detallesAccesibilidad?: AccesibilidadListRelationFilter
  }, "empresa_id" | "email">

  export type EmpresaOrderByWithAggregationInput = {
    empresa_id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    publicado?: SortOrder
    accesibilidad?: SortOrderInput | SortOrder
    _count?: EmpresaCountOrderByAggregateInput
    _avg?: EmpresaAvgOrderByAggregateInput
    _max?: EmpresaMaxOrderByAggregateInput
    _min?: EmpresaMinOrderByAggregateInput
    _sum?: EmpresaSumOrderByAggregateInput
  }

  export type EmpresaScalarWhereWithAggregatesInput = {
    AND?: EmpresaScalarWhereWithAggregatesInput | EmpresaScalarWhereWithAggregatesInput[]
    OR?: EmpresaScalarWhereWithAggregatesInput[]
    NOT?: EmpresaScalarWhereWithAggregatesInput | EmpresaScalarWhereWithAggregatesInput[]
    empresa_id?: IntWithAggregatesFilter<"Empresa"> | number
    nombre?: StringWithAggregatesFilter<"Empresa"> | string
    email?: StringWithAggregatesFilter<"Empresa"> | string
    password?: StringWithAggregatesFilter<"Empresa"> | string
    publicado?: BoolWithAggregatesFilter<"Empresa"> | boolean
    accesibilidad?: StringNullableWithAggregatesFilter<"Empresa"> | string | null
  }

  export type AccesibilidadWhereInput = {
    AND?: AccesibilidadWhereInput | AccesibilidadWhereInput[]
    OR?: AccesibilidadWhereInput[]
    NOT?: AccesibilidadWhereInput | AccesibilidadWhereInput[]
    accesibilidad_id?: IntFilter<"Accesibilidad"> | number
    empresa_id?: IntFilter<"Accesibilidad"> | number
    pasillos_min_90cm?: BoolFilter<"Accesibilidad"> | boolean
    rampa?: BoolFilter<"Accesibilidad"> | boolean
    puerta_80cm?: BoolFilter<"Accesibilidad"> | boolean
    pisos_antideslizantes?: BoolFilter<"Accesibilidad"> | boolean
    bano_accesible?: BoolFilter<"Accesibilidad"> | boolean
    mesas_sillas_adaptadas?: BoolFilter<"Accesibilidad"> | boolean
    ascensor?: BoolFilter<"Accesibilidad"> | boolean
    senalizacion_braille?: BoolFilter<"Accesibilidad"> | boolean
    contraste_colores?: BoolFilter<"Accesibilidad"> | boolean
    guias_podotactiles?: BoolFilter<"Accesibilidad"> | boolean
    alarmas_emergencia?: BoolFilter<"Accesibilidad"> | boolean
    sistema_audifonos?: BoolFilter<"Accesibilidad"> | boolean
    bano_adaptado_cantidad?: StringNullableFilter<"Accesibilidad"> | string | null
    bano_adaptado_detalles?: StringNullableFilter<"Accesibilidad"> | string | null
    atencion_prioritaria_tipo?: StringNullableFilter<"Accesibilidad"> | string | null
    atencion_prioritaria_horario?: StringNullableFilter<"Accesibilidad"> | string | null
    otros_servicios?: StringNullableFilter<"Accesibilidad"> | string | null
    empresa?: XOR<EmpresaScalarRelationFilter, EmpresaWhereInput>
  }

  export type AccesibilidadOrderByWithRelationInput = {
    accesibilidad_id?: SortOrder
    empresa_id?: SortOrder
    pasillos_min_90cm?: SortOrder
    rampa?: SortOrder
    puerta_80cm?: SortOrder
    pisos_antideslizantes?: SortOrder
    bano_accesible?: SortOrder
    mesas_sillas_adaptadas?: SortOrder
    ascensor?: SortOrder
    senalizacion_braille?: SortOrder
    contraste_colores?: SortOrder
    guias_podotactiles?: SortOrder
    alarmas_emergencia?: SortOrder
    sistema_audifonos?: SortOrder
    bano_adaptado_cantidad?: SortOrderInput | SortOrder
    bano_adaptado_detalles?: SortOrderInput | SortOrder
    atencion_prioritaria_tipo?: SortOrderInput | SortOrder
    atencion_prioritaria_horario?: SortOrderInput | SortOrder
    otros_servicios?: SortOrderInput | SortOrder
    empresa?: EmpresaOrderByWithRelationInput
    _relevance?: AccesibilidadOrderByRelevanceInput
  }

  export type AccesibilidadWhereUniqueInput = Prisma.AtLeast<{
    accesibilidad_id?: number
    AND?: AccesibilidadWhereInput | AccesibilidadWhereInput[]
    OR?: AccesibilidadWhereInput[]
    NOT?: AccesibilidadWhereInput | AccesibilidadWhereInput[]
    empresa_id?: IntFilter<"Accesibilidad"> | number
    pasillos_min_90cm?: BoolFilter<"Accesibilidad"> | boolean
    rampa?: BoolFilter<"Accesibilidad"> | boolean
    puerta_80cm?: BoolFilter<"Accesibilidad"> | boolean
    pisos_antideslizantes?: BoolFilter<"Accesibilidad"> | boolean
    bano_accesible?: BoolFilter<"Accesibilidad"> | boolean
    mesas_sillas_adaptadas?: BoolFilter<"Accesibilidad"> | boolean
    ascensor?: BoolFilter<"Accesibilidad"> | boolean
    senalizacion_braille?: BoolFilter<"Accesibilidad"> | boolean
    contraste_colores?: BoolFilter<"Accesibilidad"> | boolean
    guias_podotactiles?: BoolFilter<"Accesibilidad"> | boolean
    alarmas_emergencia?: BoolFilter<"Accesibilidad"> | boolean
    sistema_audifonos?: BoolFilter<"Accesibilidad"> | boolean
    bano_adaptado_cantidad?: StringNullableFilter<"Accesibilidad"> | string | null
    bano_adaptado_detalles?: StringNullableFilter<"Accesibilidad"> | string | null
    atencion_prioritaria_tipo?: StringNullableFilter<"Accesibilidad"> | string | null
    atencion_prioritaria_horario?: StringNullableFilter<"Accesibilidad"> | string | null
    otros_servicios?: StringNullableFilter<"Accesibilidad"> | string | null
    empresa?: XOR<EmpresaScalarRelationFilter, EmpresaWhereInput>
  }, "accesibilidad_id">

  export type AccesibilidadOrderByWithAggregationInput = {
    accesibilidad_id?: SortOrder
    empresa_id?: SortOrder
    pasillos_min_90cm?: SortOrder
    rampa?: SortOrder
    puerta_80cm?: SortOrder
    pisos_antideslizantes?: SortOrder
    bano_accesible?: SortOrder
    mesas_sillas_adaptadas?: SortOrder
    ascensor?: SortOrder
    senalizacion_braille?: SortOrder
    contraste_colores?: SortOrder
    guias_podotactiles?: SortOrder
    alarmas_emergencia?: SortOrder
    sistema_audifonos?: SortOrder
    bano_adaptado_cantidad?: SortOrderInput | SortOrder
    bano_adaptado_detalles?: SortOrderInput | SortOrder
    atencion_prioritaria_tipo?: SortOrderInput | SortOrder
    atencion_prioritaria_horario?: SortOrderInput | SortOrder
    otros_servicios?: SortOrderInput | SortOrder
    _count?: AccesibilidadCountOrderByAggregateInput
    _avg?: AccesibilidadAvgOrderByAggregateInput
    _max?: AccesibilidadMaxOrderByAggregateInput
    _min?: AccesibilidadMinOrderByAggregateInput
    _sum?: AccesibilidadSumOrderByAggregateInput
  }

  export type AccesibilidadScalarWhereWithAggregatesInput = {
    AND?: AccesibilidadScalarWhereWithAggregatesInput | AccesibilidadScalarWhereWithAggregatesInput[]
    OR?: AccesibilidadScalarWhereWithAggregatesInput[]
    NOT?: AccesibilidadScalarWhereWithAggregatesInput | AccesibilidadScalarWhereWithAggregatesInput[]
    accesibilidad_id?: IntWithAggregatesFilter<"Accesibilidad"> | number
    empresa_id?: IntWithAggregatesFilter<"Accesibilidad"> | number
    pasillos_min_90cm?: BoolWithAggregatesFilter<"Accesibilidad"> | boolean
    rampa?: BoolWithAggregatesFilter<"Accesibilidad"> | boolean
    puerta_80cm?: BoolWithAggregatesFilter<"Accesibilidad"> | boolean
    pisos_antideslizantes?: BoolWithAggregatesFilter<"Accesibilidad"> | boolean
    bano_accesible?: BoolWithAggregatesFilter<"Accesibilidad"> | boolean
    mesas_sillas_adaptadas?: BoolWithAggregatesFilter<"Accesibilidad"> | boolean
    ascensor?: BoolWithAggregatesFilter<"Accesibilidad"> | boolean
    senalizacion_braille?: BoolWithAggregatesFilter<"Accesibilidad"> | boolean
    contraste_colores?: BoolWithAggregatesFilter<"Accesibilidad"> | boolean
    guias_podotactiles?: BoolWithAggregatesFilter<"Accesibilidad"> | boolean
    alarmas_emergencia?: BoolWithAggregatesFilter<"Accesibilidad"> | boolean
    sistema_audifonos?: BoolWithAggregatesFilter<"Accesibilidad"> | boolean
    bano_adaptado_cantidad?: StringNullableWithAggregatesFilter<"Accesibilidad"> | string | null
    bano_adaptado_detalles?: StringNullableWithAggregatesFilter<"Accesibilidad"> | string | null
    atencion_prioritaria_tipo?: StringNullableWithAggregatesFilter<"Accesibilidad"> | string | null
    atencion_prioritaria_horario?: StringNullableWithAggregatesFilter<"Accesibilidad"> | string | null
    otros_servicios?: StringNullableWithAggregatesFilter<"Accesibilidad"> | string | null
  }

  export type ContactWhereInput = {
    AND?: ContactWhereInput | ContactWhereInput[]
    OR?: ContactWhereInput[]
    NOT?: ContactWhereInput | ContactWhereInput[]
    contact_id?: IntFilter<"Contact"> | number
    name?: StringFilter<"Contact"> | string
    email?: StringFilter<"Contact"> | string
    message?: StringFilter<"Contact"> | string
    createdAt?: DateTimeFilter<"Contact"> | Date | string
  }

  export type ContactOrderByWithRelationInput = {
    contact_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    message?: SortOrder
    createdAt?: SortOrder
    _relevance?: ContactOrderByRelevanceInput
  }

  export type ContactWhereUniqueInput = Prisma.AtLeast<{
    contact_id?: number
    AND?: ContactWhereInput | ContactWhereInput[]
    OR?: ContactWhereInput[]
    NOT?: ContactWhereInput | ContactWhereInput[]
    name?: StringFilter<"Contact"> | string
    email?: StringFilter<"Contact"> | string
    message?: StringFilter<"Contact"> | string
    createdAt?: DateTimeFilter<"Contact"> | Date | string
  }, "contact_id">

  export type ContactOrderByWithAggregationInput = {
    contact_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    message?: SortOrder
    createdAt?: SortOrder
    _count?: ContactCountOrderByAggregateInput
    _avg?: ContactAvgOrderByAggregateInput
    _max?: ContactMaxOrderByAggregateInput
    _min?: ContactMinOrderByAggregateInput
    _sum?: ContactSumOrderByAggregateInput
  }

  export type ContactScalarWhereWithAggregatesInput = {
    AND?: ContactScalarWhereWithAggregatesInput | ContactScalarWhereWithAggregatesInput[]
    OR?: ContactScalarWhereWithAggregatesInput[]
    NOT?: ContactScalarWhereWithAggregatesInput | ContactScalarWhereWithAggregatesInput[]
    contact_id?: IntWithAggregatesFilter<"Contact"> | number
    name?: StringWithAggregatesFilter<"Contact"> | string
    email?: StringWithAggregatesFilter<"Contact"> | string
    message?: StringWithAggregatesFilter<"Contact"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Contact"> | Date | string
  }

  export type UsuarioCreateInput = {
    nombre: string
    email: string
    password: string
    publicado?: boolean
  }

  export type UsuarioUncheckedCreateInput = {
    usuario_id?: number
    nombre: string
    email: string
    password: string
    publicado?: boolean
  }

  export type UsuarioUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    publicado?: BoolFieldUpdateOperationsInput | boolean
  }

  export type UsuarioUncheckedUpdateInput = {
    usuario_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    publicado?: BoolFieldUpdateOperationsInput | boolean
  }

  export type UsuarioCreateManyInput = {
    usuario_id?: number
    nombre: string
    email: string
    password: string
    publicado?: boolean
  }

  export type UsuarioUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    publicado?: BoolFieldUpdateOperationsInput | boolean
  }

  export type UsuarioUncheckedUpdateManyInput = {
    usuario_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    publicado?: BoolFieldUpdateOperationsInput | boolean
  }

  export type EmpresaCreateInput = {
    nombre: string
    email: string
    password: string
    publicado?: boolean
    accesibilidad?: string | null
    detallesAccesibilidad?: AccesibilidadCreateNestedManyWithoutEmpresaInput
  }

  export type EmpresaUncheckedCreateInput = {
    empresa_id?: number
    nombre: string
    email: string
    password: string
    publicado?: boolean
    accesibilidad?: string | null
    detallesAccesibilidad?: AccesibilidadUncheckedCreateNestedManyWithoutEmpresaInput
  }

  export type EmpresaUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    publicado?: BoolFieldUpdateOperationsInput | boolean
    accesibilidad?: NullableStringFieldUpdateOperationsInput | string | null
    detallesAccesibilidad?: AccesibilidadUpdateManyWithoutEmpresaNestedInput
  }

  export type EmpresaUncheckedUpdateInput = {
    empresa_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    publicado?: BoolFieldUpdateOperationsInput | boolean
    accesibilidad?: NullableStringFieldUpdateOperationsInput | string | null
    detallesAccesibilidad?: AccesibilidadUncheckedUpdateManyWithoutEmpresaNestedInput
  }

  export type EmpresaCreateManyInput = {
    empresa_id?: number
    nombre: string
    email: string
    password: string
    publicado?: boolean
    accesibilidad?: string | null
  }

  export type EmpresaUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    publicado?: BoolFieldUpdateOperationsInput | boolean
    accesibilidad?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EmpresaUncheckedUpdateManyInput = {
    empresa_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    publicado?: BoolFieldUpdateOperationsInput | boolean
    accesibilidad?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccesibilidadCreateInput = {
    pasillos_min_90cm?: boolean
    rampa?: boolean
    puerta_80cm?: boolean
    pisos_antideslizantes?: boolean
    bano_accesible?: boolean
    mesas_sillas_adaptadas?: boolean
    ascensor?: boolean
    senalizacion_braille?: boolean
    contraste_colores?: boolean
    guias_podotactiles?: boolean
    alarmas_emergencia?: boolean
    sistema_audifonos?: boolean
    bano_adaptado_cantidad?: string | null
    bano_adaptado_detalles?: string | null
    atencion_prioritaria_tipo?: string | null
    atencion_prioritaria_horario?: string | null
    otros_servicios?: string | null
    empresa: EmpresaCreateNestedOneWithoutDetallesAccesibilidadInput
  }

  export type AccesibilidadUncheckedCreateInput = {
    accesibilidad_id?: number
    empresa_id: number
    pasillos_min_90cm?: boolean
    rampa?: boolean
    puerta_80cm?: boolean
    pisos_antideslizantes?: boolean
    bano_accesible?: boolean
    mesas_sillas_adaptadas?: boolean
    ascensor?: boolean
    senalizacion_braille?: boolean
    contraste_colores?: boolean
    guias_podotactiles?: boolean
    alarmas_emergencia?: boolean
    sistema_audifonos?: boolean
    bano_adaptado_cantidad?: string | null
    bano_adaptado_detalles?: string | null
    atencion_prioritaria_tipo?: string | null
    atencion_prioritaria_horario?: string | null
    otros_servicios?: string | null
  }

  export type AccesibilidadUpdateInput = {
    pasillos_min_90cm?: BoolFieldUpdateOperationsInput | boolean
    rampa?: BoolFieldUpdateOperationsInput | boolean
    puerta_80cm?: BoolFieldUpdateOperationsInput | boolean
    pisos_antideslizantes?: BoolFieldUpdateOperationsInput | boolean
    bano_accesible?: BoolFieldUpdateOperationsInput | boolean
    mesas_sillas_adaptadas?: BoolFieldUpdateOperationsInput | boolean
    ascensor?: BoolFieldUpdateOperationsInput | boolean
    senalizacion_braille?: BoolFieldUpdateOperationsInput | boolean
    contraste_colores?: BoolFieldUpdateOperationsInput | boolean
    guias_podotactiles?: BoolFieldUpdateOperationsInput | boolean
    alarmas_emergencia?: BoolFieldUpdateOperationsInput | boolean
    sistema_audifonos?: BoolFieldUpdateOperationsInput | boolean
    bano_adaptado_cantidad?: NullableStringFieldUpdateOperationsInput | string | null
    bano_adaptado_detalles?: NullableStringFieldUpdateOperationsInput | string | null
    atencion_prioritaria_tipo?: NullableStringFieldUpdateOperationsInput | string | null
    atencion_prioritaria_horario?: NullableStringFieldUpdateOperationsInput | string | null
    otros_servicios?: NullableStringFieldUpdateOperationsInput | string | null
    empresa?: EmpresaUpdateOneRequiredWithoutDetallesAccesibilidadNestedInput
  }

  export type AccesibilidadUncheckedUpdateInput = {
    accesibilidad_id?: IntFieldUpdateOperationsInput | number
    empresa_id?: IntFieldUpdateOperationsInput | number
    pasillos_min_90cm?: BoolFieldUpdateOperationsInput | boolean
    rampa?: BoolFieldUpdateOperationsInput | boolean
    puerta_80cm?: BoolFieldUpdateOperationsInput | boolean
    pisos_antideslizantes?: BoolFieldUpdateOperationsInput | boolean
    bano_accesible?: BoolFieldUpdateOperationsInput | boolean
    mesas_sillas_adaptadas?: BoolFieldUpdateOperationsInput | boolean
    ascensor?: BoolFieldUpdateOperationsInput | boolean
    senalizacion_braille?: BoolFieldUpdateOperationsInput | boolean
    contraste_colores?: BoolFieldUpdateOperationsInput | boolean
    guias_podotactiles?: BoolFieldUpdateOperationsInput | boolean
    alarmas_emergencia?: BoolFieldUpdateOperationsInput | boolean
    sistema_audifonos?: BoolFieldUpdateOperationsInput | boolean
    bano_adaptado_cantidad?: NullableStringFieldUpdateOperationsInput | string | null
    bano_adaptado_detalles?: NullableStringFieldUpdateOperationsInput | string | null
    atencion_prioritaria_tipo?: NullableStringFieldUpdateOperationsInput | string | null
    atencion_prioritaria_horario?: NullableStringFieldUpdateOperationsInput | string | null
    otros_servicios?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccesibilidadCreateManyInput = {
    accesibilidad_id?: number
    empresa_id: number
    pasillos_min_90cm?: boolean
    rampa?: boolean
    puerta_80cm?: boolean
    pisos_antideslizantes?: boolean
    bano_accesible?: boolean
    mesas_sillas_adaptadas?: boolean
    ascensor?: boolean
    senalizacion_braille?: boolean
    contraste_colores?: boolean
    guias_podotactiles?: boolean
    alarmas_emergencia?: boolean
    sistema_audifonos?: boolean
    bano_adaptado_cantidad?: string | null
    bano_adaptado_detalles?: string | null
    atencion_prioritaria_tipo?: string | null
    atencion_prioritaria_horario?: string | null
    otros_servicios?: string | null
  }

  export type AccesibilidadUpdateManyMutationInput = {
    pasillos_min_90cm?: BoolFieldUpdateOperationsInput | boolean
    rampa?: BoolFieldUpdateOperationsInput | boolean
    puerta_80cm?: BoolFieldUpdateOperationsInput | boolean
    pisos_antideslizantes?: BoolFieldUpdateOperationsInput | boolean
    bano_accesible?: BoolFieldUpdateOperationsInput | boolean
    mesas_sillas_adaptadas?: BoolFieldUpdateOperationsInput | boolean
    ascensor?: BoolFieldUpdateOperationsInput | boolean
    senalizacion_braille?: BoolFieldUpdateOperationsInput | boolean
    contraste_colores?: BoolFieldUpdateOperationsInput | boolean
    guias_podotactiles?: BoolFieldUpdateOperationsInput | boolean
    alarmas_emergencia?: BoolFieldUpdateOperationsInput | boolean
    sistema_audifonos?: BoolFieldUpdateOperationsInput | boolean
    bano_adaptado_cantidad?: NullableStringFieldUpdateOperationsInput | string | null
    bano_adaptado_detalles?: NullableStringFieldUpdateOperationsInput | string | null
    atencion_prioritaria_tipo?: NullableStringFieldUpdateOperationsInput | string | null
    atencion_prioritaria_horario?: NullableStringFieldUpdateOperationsInput | string | null
    otros_servicios?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccesibilidadUncheckedUpdateManyInput = {
    accesibilidad_id?: IntFieldUpdateOperationsInput | number
    empresa_id?: IntFieldUpdateOperationsInput | number
    pasillos_min_90cm?: BoolFieldUpdateOperationsInput | boolean
    rampa?: BoolFieldUpdateOperationsInput | boolean
    puerta_80cm?: BoolFieldUpdateOperationsInput | boolean
    pisos_antideslizantes?: BoolFieldUpdateOperationsInput | boolean
    bano_accesible?: BoolFieldUpdateOperationsInput | boolean
    mesas_sillas_adaptadas?: BoolFieldUpdateOperationsInput | boolean
    ascensor?: BoolFieldUpdateOperationsInput | boolean
    senalizacion_braille?: BoolFieldUpdateOperationsInput | boolean
    contraste_colores?: BoolFieldUpdateOperationsInput | boolean
    guias_podotactiles?: BoolFieldUpdateOperationsInput | boolean
    alarmas_emergencia?: BoolFieldUpdateOperationsInput | boolean
    sistema_audifonos?: BoolFieldUpdateOperationsInput | boolean
    bano_adaptado_cantidad?: NullableStringFieldUpdateOperationsInput | string | null
    bano_adaptado_detalles?: NullableStringFieldUpdateOperationsInput | string | null
    atencion_prioritaria_tipo?: NullableStringFieldUpdateOperationsInput | string | null
    atencion_prioritaria_horario?: NullableStringFieldUpdateOperationsInput | string | null
    otros_servicios?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ContactCreateInput = {
    name: string
    email: string
    message: string
    createdAt?: Date | string
  }

  export type ContactUncheckedCreateInput = {
    contact_id?: number
    name: string
    email: string
    message: string
    createdAt?: Date | string
  }

  export type ContactUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ContactUncheckedUpdateInput = {
    contact_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ContactCreateManyInput = {
    contact_id?: number
    name: string
    email: string
    message: string
    createdAt?: Date | string
  }

  export type ContactUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ContactUncheckedUpdateManyInput = {
    contact_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type UsuarioOrderByRelevanceInput = {
    fields: UsuarioOrderByRelevanceFieldEnum | UsuarioOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type UsuarioCountOrderByAggregateInput = {
    usuario_id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    publicado?: SortOrder
  }

  export type UsuarioAvgOrderByAggregateInput = {
    usuario_id?: SortOrder
  }

  export type UsuarioMaxOrderByAggregateInput = {
    usuario_id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    publicado?: SortOrder
  }

  export type UsuarioMinOrderByAggregateInput = {
    usuario_id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    publicado?: SortOrder
  }

  export type UsuarioSumOrderByAggregateInput = {
    usuario_id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type AccesibilidadListRelationFilter = {
    every?: AccesibilidadWhereInput
    some?: AccesibilidadWhereInput
    none?: AccesibilidadWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type AccesibilidadOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EmpresaOrderByRelevanceInput = {
    fields: EmpresaOrderByRelevanceFieldEnum | EmpresaOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type EmpresaCountOrderByAggregateInput = {
    empresa_id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    publicado?: SortOrder
    accesibilidad?: SortOrder
  }

  export type EmpresaAvgOrderByAggregateInput = {
    empresa_id?: SortOrder
  }

  export type EmpresaMaxOrderByAggregateInput = {
    empresa_id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    publicado?: SortOrder
    accesibilidad?: SortOrder
  }

  export type EmpresaMinOrderByAggregateInput = {
    empresa_id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    publicado?: SortOrder
    accesibilidad?: SortOrder
  }

  export type EmpresaSumOrderByAggregateInput = {
    empresa_id?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type EmpresaScalarRelationFilter = {
    is?: EmpresaWhereInput
    isNot?: EmpresaWhereInput
  }

  export type AccesibilidadOrderByRelevanceInput = {
    fields: AccesibilidadOrderByRelevanceFieldEnum | AccesibilidadOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type AccesibilidadCountOrderByAggregateInput = {
    accesibilidad_id?: SortOrder
    empresa_id?: SortOrder
    pasillos_min_90cm?: SortOrder
    rampa?: SortOrder
    puerta_80cm?: SortOrder
    pisos_antideslizantes?: SortOrder
    bano_accesible?: SortOrder
    mesas_sillas_adaptadas?: SortOrder
    ascensor?: SortOrder
    senalizacion_braille?: SortOrder
    contraste_colores?: SortOrder
    guias_podotactiles?: SortOrder
    alarmas_emergencia?: SortOrder
    sistema_audifonos?: SortOrder
    bano_adaptado_cantidad?: SortOrder
    bano_adaptado_detalles?: SortOrder
    atencion_prioritaria_tipo?: SortOrder
    atencion_prioritaria_horario?: SortOrder
    otros_servicios?: SortOrder
  }

  export type AccesibilidadAvgOrderByAggregateInput = {
    accesibilidad_id?: SortOrder
    empresa_id?: SortOrder
  }

  export type AccesibilidadMaxOrderByAggregateInput = {
    accesibilidad_id?: SortOrder
    empresa_id?: SortOrder
    pasillos_min_90cm?: SortOrder
    rampa?: SortOrder
    puerta_80cm?: SortOrder
    pisos_antideslizantes?: SortOrder
    bano_accesible?: SortOrder
    mesas_sillas_adaptadas?: SortOrder
    ascensor?: SortOrder
    senalizacion_braille?: SortOrder
    contraste_colores?: SortOrder
    guias_podotactiles?: SortOrder
    alarmas_emergencia?: SortOrder
    sistema_audifonos?: SortOrder
    bano_adaptado_cantidad?: SortOrder
    bano_adaptado_detalles?: SortOrder
    atencion_prioritaria_tipo?: SortOrder
    atencion_prioritaria_horario?: SortOrder
    otros_servicios?: SortOrder
  }

  export type AccesibilidadMinOrderByAggregateInput = {
    accesibilidad_id?: SortOrder
    empresa_id?: SortOrder
    pasillos_min_90cm?: SortOrder
    rampa?: SortOrder
    puerta_80cm?: SortOrder
    pisos_antideslizantes?: SortOrder
    bano_accesible?: SortOrder
    mesas_sillas_adaptadas?: SortOrder
    ascensor?: SortOrder
    senalizacion_braille?: SortOrder
    contraste_colores?: SortOrder
    guias_podotactiles?: SortOrder
    alarmas_emergencia?: SortOrder
    sistema_audifonos?: SortOrder
    bano_adaptado_cantidad?: SortOrder
    bano_adaptado_detalles?: SortOrder
    atencion_prioritaria_tipo?: SortOrder
    atencion_prioritaria_horario?: SortOrder
    otros_servicios?: SortOrder
  }

  export type AccesibilidadSumOrderByAggregateInput = {
    accesibilidad_id?: SortOrder
    empresa_id?: SortOrder
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type ContactOrderByRelevanceInput = {
    fields: ContactOrderByRelevanceFieldEnum | ContactOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ContactCountOrderByAggregateInput = {
    contact_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    message?: SortOrder
    createdAt?: SortOrder
  }

  export type ContactAvgOrderByAggregateInput = {
    contact_id?: SortOrder
  }

  export type ContactMaxOrderByAggregateInput = {
    contact_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    message?: SortOrder
    createdAt?: SortOrder
  }

  export type ContactMinOrderByAggregateInput = {
    contact_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    message?: SortOrder
    createdAt?: SortOrder
  }

  export type ContactSumOrderByAggregateInput = {
    contact_id?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type AccesibilidadCreateNestedManyWithoutEmpresaInput = {
    create?: XOR<AccesibilidadCreateWithoutEmpresaInput, AccesibilidadUncheckedCreateWithoutEmpresaInput> | AccesibilidadCreateWithoutEmpresaInput[] | AccesibilidadUncheckedCreateWithoutEmpresaInput[]
    connectOrCreate?: AccesibilidadCreateOrConnectWithoutEmpresaInput | AccesibilidadCreateOrConnectWithoutEmpresaInput[]
    createMany?: AccesibilidadCreateManyEmpresaInputEnvelope
    connect?: AccesibilidadWhereUniqueInput | AccesibilidadWhereUniqueInput[]
  }

  export type AccesibilidadUncheckedCreateNestedManyWithoutEmpresaInput = {
    create?: XOR<AccesibilidadCreateWithoutEmpresaInput, AccesibilidadUncheckedCreateWithoutEmpresaInput> | AccesibilidadCreateWithoutEmpresaInput[] | AccesibilidadUncheckedCreateWithoutEmpresaInput[]
    connectOrCreate?: AccesibilidadCreateOrConnectWithoutEmpresaInput | AccesibilidadCreateOrConnectWithoutEmpresaInput[]
    createMany?: AccesibilidadCreateManyEmpresaInputEnvelope
    connect?: AccesibilidadWhereUniqueInput | AccesibilidadWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type AccesibilidadUpdateManyWithoutEmpresaNestedInput = {
    create?: XOR<AccesibilidadCreateWithoutEmpresaInput, AccesibilidadUncheckedCreateWithoutEmpresaInput> | AccesibilidadCreateWithoutEmpresaInput[] | AccesibilidadUncheckedCreateWithoutEmpresaInput[]
    connectOrCreate?: AccesibilidadCreateOrConnectWithoutEmpresaInput | AccesibilidadCreateOrConnectWithoutEmpresaInput[]
    upsert?: AccesibilidadUpsertWithWhereUniqueWithoutEmpresaInput | AccesibilidadUpsertWithWhereUniqueWithoutEmpresaInput[]
    createMany?: AccesibilidadCreateManyEmpresaInputEnvelope
    set?: AccesibilidadWhereUniqueInput | AccesibilidadWhereUniqueInput[]
    disconnect?: AccesibilidadWhereUniqueInput | AccesibilidadWhereUniqueInput[]
    delete?: AccesibilidadWhereUniqueInput | AccesibilidadWhereUniqueInput[]
    connect?: AccesibilidadWhereUniqueInput | AccesibilidadWhereUniqueInput[]
    update?: AccesibilidadUpdateWithWhereUniqueWithoutEmpresaInput | AccesibilidadUpdateWithWhereUniqueWithoutEmpresaInput[]
    updateMany?: AccesibilidadUpdateManyWithWhereWithoutEmpresaInput | AccesibilidadUpdateManyWithWhereWithoutEmpresaInput[]
    deleteMany?: AccesibilidadScalarWhereInput | AccesibilidadScalarWhereInput[]
  }

  export type AccesibilidadUncheckedUpdateManyWithoutEmpresaNestedInput = {
    create?: XOR<AccesibilidadCreateWithoutEmpresaInput, AccesibilidadUncheckedCreateWithoutEmpresaInput> | AccesibilidadCreateWithoutEmpresaInput[] | AccesibilidadUncheckedCreateWithoutEmpresaInput[]
    connectOrCreate?: AccesibilidadCreateOrConnectWithoutEmpresaInput | AccesibilidadCreateOrConnectWithoutEmpresaInput[]
    upsert?: AccesibilidadUpsertWithWhereUniqueWithoutEmpresaInput | AccesibilidadUpsertWithWhereUniqueWithoutEmpresaInput[]
    createMany?: AccesibilidadCreateManyEmpresaInputEnvelope
    set?: AccesibilidadWhereUniqueInput | AccesibilidadWhereUniqueInput[]
    disconnect?: AccesibilidadWhereUniqueInput | AccesibilidadWhereUniqueInput[]
    delete?: AccesibilidadWhereUniqueInput | AccesibilidadWhereUniqueInput[]
    connect?: AccesibilidadWhereUniqueInput | AccesibilidadWhereUniqueInput[]
    update?: AccesibilidadUpdateWithWhereUniqueWithoutEmpresaInput | AccesibilidadUpdateWithWhereUniqueWithoutEmpresaInput[]
    updateMany?: AccesibilidadUpdateManyWithWhereWithoutEmpresaInput | AccesibilidadUpdateManyWithWhereWithoutEmpresaInput[]
    deleteMany?: AccesibilidadScalarWhereInput | AccesibilidadScalarWhereInput[]
  }

  export type EmpresaCreateNestedOneWithoutDetallesAccesibilidadInput = {
    create?: XOR<EmpresaCreateWithoutDetallesAccesibilidadInput, EmpresaUncheckedCreateWithoutDetallesAccesibilidadInput>
    connectOrCreate?: EmpresaCreateOrConnectWithoutDetallesAccesibilidadInput
    connect?: EmpresaWhereUniqueInput
  }

  export type EmpresaUpdateOneRequiredWithoutDetallesAccesibilidadNestedInput = {
    create?: XOR<EmpresaCreateWithoutDetallesAccesibilidadInput, EmpresaUncheckedCreateWithoutDetallesAccesibilidadInput>
    connectOrCreate?: EmpresaCreateOrConnectWithoutDetallesAccesibilidadInput
    upsert?: EmpresaUpsertWithoutDetallesAccesibilidadInput
    connect?: EmpresaWhereUniqueInput
    update?: XOR<XOR<EmpresaUpdateToOneWithWhereWithoutDetallesAccesibilidadInput, EmpresaUpdateWithoutDetallesAccesibilidadInput>, EmpresaUncheckedUpdateWithoutDetallesAccesibilidadInput>
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type AccesibilidadCreateWithoutEmpresaInput = {
    pasillos_min_90cm?: boolean
    rampa?: boolean
    puerta_80cm?: boolean
    pisos_antideslizantes?: boolean
    bano_accesible?: boolean
    mesas_sillas_adaptadas?: boolean
    ascensor?: boolean
    senalizacion_braille?: boolean
    contraste_colores?: boolean
    guias_podotactiles?: boolean
    alarmas_emergencia?: boolean
    sistema_audifonos?: boolean
    bano_adaptado_cantidad?: string | null
    bano_adaptado_detalles?: string | null
    atencion_prioritaria_tipo?: string | null
    atencion_prioritaria_horario?: string | null
    otros_servicios?: string | null
  }

  export type AccesibilidadUncheckedCreateWithoutEmpresaInput = {
    accesibilidad_id?: number
    pasillos_min_90cm?: boolean
    rampa?: boolean
    puerta_80cm?: boolean
    pisos_antideslizantes?: boolean
    bano_accesible?: boolean
    mesas_sillas_adaptadas?: boolean
    ascensor?: boolean
    senalizacion_braille?: boolean
    contraste_colores?: boolean
    guias_podotactiles?: boolean
    alarmas_emergencia?: boolean
    sistema_audifonos?: boolean
    bano_adaptado_cantidad?: string | null
    bano_adaptado_detalles?: string | null
    atencion_prioritaria_tipo?: string | null
    atencion_prioritaria_horario?: string | null
    otros_servicios?: string | null
  }

  export type AccesibilidadCreateOrConnectWithoutEmpresaInput = {
    where: AccesibilidadWhereUniqueInput
    create: XOR<AccesibilidadCreateWithoutEmpresaInput, AccesibilidadUncheckedCreateWithoutEmpresaInput>
  }

  export type AccesibilidadCreateManyEmpresaInputEnvelope = {
    data: AccesibilidadCreateManyEmpresaInput | AccesibilidadCreateManyEmpresaInput[]
    skipDuplicates?: boolean
  }

  export type AccesibilidadUpsertWithWhereUniqueWithoutEmpresaInput = {
    where: AccesibilidadWhereUniqueInput
    update: XOR<AccesibilidadUpdateWithoutEmpresaInput, AccesibilidadUncheckedUpdateWithoutEmpresaInput>
    create: XOR<AccesibilidadCreateWithoutEmpresaInput, AccesibilidadUncheckedCreateWithoutEmpresaInput>
  }

  export type AccesibilidadUpdateWithWhereUniqueWithoutEmpresaInput = {
    where: AccesibilidadWhereUniqueInput
    data: XOR<AccesibilidadUpdateWithoutEmpresaInput, AccesibilidadUncheckedUpdateWithoutEmpresaInput>
  }

  export type AccesibilidadUpdateManyWithWhereWithoutEmpresaInput = {
    where: AccesibilidadScalarWhereInput
    data: XOR<AccesibilidadUpdateManyMutationInput, AccesibilidadUncheckedUpdateManyWithoutEmpresaInput>
  }

  export type AccesibilidadScalarWhereInput = {
    AND?: AccesibilidadScalarWhereInput | AccesibilidadScalarWhereInput[]
    OR?: AccesibilidadScalarWhereInput[]
    NOT?: AccesibilidadScalarWhereInput | AccesibilidadScalarWhereInput[]
    accesibilidad_id?: IntFilter<"Accesibilidad"> | number
    empresa_id?: IntFilter<"Accesibilidad"> | number
    pasillos_min_90cm?: BoolFilter<"Accesibilidad"> | boolean
    rampa?: BoolFilter<"Accesibilidad"> | boolean
    puerta_80cm?: BoolFilter<"Accesibilidad"> | boolean
    pisos_antideslizantes?: BoolFilter<"Accesibilidad"> | boolean
    bano_accesible?: BoolFilter<"Accesibilidad"> | boolean
    mesas_sillas_adaptadas?: BoolFilter<"Accesibilidad"> | boolean
    ascensor?: BoolFilter<"Accesibilidad"> | boolean
    senalizacion_braille?: BoolFilter<"Accesibilidad"> | boolean
    contraste_colores?: BoolFilter<"Accesibilidad"> | boolean
    guias_podotactiles?: BoolFilter<"Accesibilidad"> | boolean
    alarmas_emergencia?: BoolFilter<"Accesibilidad"> | boolean
    sistema_audifonos?: BoolFilter<"Accesibilidad"> | boolean
    bano_adaptado_cantidad?: StringNullableFilter<"Accesibilidad"> | string | null
    bano_adaptado_detalles?: StringNullableFilter<"Accesibilidad"> | string | null
    atencion_prioritaria_tipo?: StringNullableFilter<"Accesibilidad"> | string | null
    atencion_prioritaria_horario?: StringNullableFilter<"Accesibilidad"> | string | null
    otros_servicios?: StringNullableFilter<"Accesibilidad"> | string | null
  }

  export type EmpresaCreateWithoutDetallesAccesibilidadInput = {
    nombre: string
    email: string
    password: string
    publicado?: boolean
    accesibilidad?: string | null
  }

  export type EmpresaUncheckedCreateWithoutDetallesAccesibilidadInput = {
    empresa_id?: number
    nombre: string
    email: string
    password: string
    publicado?: boolean
    accesibilidad?: string | null
  }

  export type EmpresaCreateOrConnectWithoutDetallesAccesibilidadInput = {
    where: EmpresaWhereUniqueInput
    create: XOR<EmpresaCreateWithoutDetallesAccesibilidadInput, EmpresaUncheckedCreateWithoutDetallesAccesibilidadInput>
  }

  export type EmpresaUpsertWithoutDetallesAccesibilidadInput = {
    update: XOR<EmpresaUpdateWithoutDetallesAccesibilidadInput, EmpresaUncheckedUpdateWithoutDetallesAccesibilidadInput>
    create: XOR<EmpresaCreateWithoutDetallesAccesibilidadInput, EmpresaUncheckedCreateWithoutDetallesAccesibilidadInput>
    where?: EmpresaWhereInput
  }

  export type EmpresaUpdateToOneWithWhereWithoutDetallesAccesibilidadInput = {
    where?: EmpresaWhereInput
    data: XOR<EmpresaUpdateWithoutDetallesAccesibilidadInput, EmpresaUncheckedUpdateWithoutDetallesAccesibilidadInput>
  }

  export type EmpresaUpdateWithoutDetallesAccesibilidadInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    publicado?: BoolFieldUpdateOperationsInput | boolean
    accesibilidad?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EmpresaUncheckedUpdateWithoutDetallesAccesibilidadInput = {
    empresa_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    publicado?: BoolFieldUpdateOperationsInput | boolean
    accesibilidad?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccesibilidadCreateManyEmpresaInput = {
    accesibilidad_id?: number
    pasillos_min_90cm?: boolean
    rampa?: boolean
    puerta_80cm?: boolean
    pisos_antideslizantes?: boolean
    bano_accesible?: boolean
    mesas_sillas_adaptadas?: boolean
    ascensor?: boolean
    senalizacion_braille?: boolean
    contraste_colores?: boolean
    guias_podotactiles?: boolean
    alarmas_emergencia?: boolean
    sistema_audifonos?: boolean
    bano_adaptado_cantidad?: string | null
    bano_adaptado_detalles?: string | null
    atencion_prioritaria_tipo?: string | null
    atencion_prioritaria_horario?: string | null
    otros_servicios?: string | null
  }

  export type AccesibilidadUpdateWithoutEmpresaInput = {
    pasillos_min_90cm?: BoolFieldUpdateOperationsInput | boolean
    rampa?: BoolFieldUpdateOperationsInput | boolean
    puerta_80cm?: BoolFieldUpdateOperationsInput | boolean
    pisos_antideslizantes?: BoolFieldUpdateOperationsInput | boolean
    bano_accesible?: BoolFieldUpdateOperationsInput | boolean
    mesas_sillas_adaptadas?: BoolFieldUpdateOperationsInput | boolean
    ascensor?: BoolFieldUpdateOperationsInput | boolean
    senalizacion_braille?: BoolFieldUpdateOperationsInput | boolean
    contraste_colores?: BoolFieldUpdateOperationsInput | boolean
    guias_podotactiles?: BoolFieldUpdateOperationsInput | boolean
    alarmas_emergencia?: BoolFieldUpdateOperationsInput | boolean
    sistema_audifonos?: BoolFieldUpdateOperationsInput | boolean
    bano_adaptado_cantidad?: NullableStringFieldUpdateOperationsInput | string | null
    bano_adaptado_detalles?: NullableStringFieldUpdateOperationsInput | string | null
    atencion_prioritaria_tipo?: NullableStringFieldUpdateOperationsInput | string | null
    atencion_prioritaria_horario?: NullableStringFieldUpdateOperationsInput | string | null
    otros_servicios?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccesibilidadUncheckedUpdateWithoutEmpresaInput = {
    accesibilidad_id?: IntFieldUpdateOperationsInput | number
    pasillos_min_90cm?: BoolFieldUpdateOperationsInput | boolean
    rampa?: BoolFieldUpdateOperationsInput | boolean
    puerta_80cm?: BoolFieldUpdateOperationsInput | boolean
    pisos_antideslizantes?: BoolFieldUpdateOperationsInput | boolean
    bano_accesible?: BoolFieldUpdateOperationsInput | boolean
    mesas_sillas_adaptadas?: BoolFieldUpdateOperationsInput | boolean
    ascensor?: BoolFieldUpdateOperationsInput | boolean
    senalizacion_braille?: BoolFieldUpdateOperationsInput | boolean
    contraste_colores?: BoolFieldUpdateOperationsInput | boolean
    guias_podotactiles?: BoolFieldUpdateOperationsInput | boolean
    alarmas_emergencia?: BoolFieldUpdateOperationsInput | boolean
    sistema_audifonos?: BoolFieldUpdateOperationsInput | boolean
    bano_adaptado_cantidad?: NullableStringFieldUpdateOperationsInput | string | null
    bano_adaptado_detalles?: NullableStringFieldUpdateOperationsInput | string | null
    atencion_prioritaria_tipo?: NullableStringFieldUpdateOperationsInput | string | null
    atencion_prioritaria_horario?: NullableStringFieldUpdateOperationsInput | string | null
    otros_servicios?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccesibilidadUncheckedUpdateManyWithoutEmpresaInput = {
    accesibilidad_id?: IntFieldUpdateOperationsInput | number
    pasillos_min_90cm?: BoolFieldUpdateOperationsInput | boolean
    rampa?: BoolFieldUpdateOperationsInput | boolean
    puerta_80cm?: BoolFieldUpdateOperationsInput | boolean
    pisos_antideslizantes?: BoolFieldUpdateOperationsInput | boolean
    bano_accesible?: BoolFieldUpdateOperationsInput | boolean
    mesas_sillas_adaptadas?: BoolFieldUpdateOperationsInput | boolean
    ascensor?: BoolFieldUpdateOperationsInput | boolean
    senalizacion_braille?: BoolFieldUpdateOperationsInput | boolean
    contraste_colores?: BoolFieldUpdateOperationsInput | boolean
    guias_podotactiles?: BoolFieldUpdateOperationsInput | boolean
    alarmas_emergencia?: BoolFieldUpdateOperationsInput | boolean
    sistema_audifonos?: BoolFieldUpdateOperationsInput | boolean
    bano_adaptado_cantidad?: NullableStringFieldUpdateOperationsInput | string | null
    bano_adaptado_detalles?: NullableStringFieldUpdateOperationsInput | string | null
    atencion_prioritaria_tipo?: NullableStringFieldUpdateOperationsInput | string | null
    atencion_prioritaria_horario?: NullableStringFieldUpdateOperationsInput | string | null
    otros_servicios?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}